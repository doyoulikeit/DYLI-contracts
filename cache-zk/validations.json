{
  "version": "3.4",
  "log": [
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:14",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/DYLIMarketplace.sol:DYLIMarketplace": {
        "src": "contracts/DYLIMarketplace.sol:9",
        "version": {
          "withMetadata": "0ec6e4baadd1fb32b6cc0d277131bb661a4d443f6c9ffcf98754e555e6efeb68",
          "withoutMetadata": "0ec6e4baadd1fb32b6cc0d277131bb661a4d443f6c9ffcf98754e555e6efeb68",
          "linkedWithoutMetadata": "0ec6e4baadd1fb32b6cc0d277131bb661a4d443f6c9ffcf98754e555e6efeb68"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "setUSDCContract(address)",
          "setERC1155Contract(address)",
          "createListing(uint256,uint128,uint64,uint64)",
          "editListing(uint256,uint128,uint64)",
          "cancelListing(uint256)",
          "buyListing(uint256,address,uint64,uint128)",
          "createBid(uint256,uint64,uint64,uint128)",
          "editBid(uint256,uint64,uint64)",
          "cancelBid(uint256)",
          "acceptBid(uint256,address)",
          "setRoyaltyRecipient(address)",
          "setRoyaltyPercentage(uint256)",
          "setTokenRoyalty(uint256,uint256)",
          "setFixedFee(uint256)",
          "withdrawUSDC(uint256)",
          "withdrawETH(uint256)",
          "getBid(uint256)",
          "getListing(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "usdc",
            "src": "contracts/DYLIMarketplace.sol:10"
          },
          {
            "kind": "state-variable-assignment",
            "name": "erc1155",
            "src": "contracts/DYLIMarketplace.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "royaltyPercentage",
            "src": "contracts/DYLIMarketplace.sol:13"
          },
          {
            "kind": "state-variable-assignment",
            "name": "royaltyRecipient",
            "src": "contracts/DYLIMarketplace.sol:14"
          },
          {
            "kind": "state-variable-assignment",
            "name": "fixedFee",
            "src": "contracts/DYLIMarketplace.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "listingCount",
            "src": "contracts/DYLIMarketplace.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "offerCount",
            "src": "contracts/DYLIMarketplace.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "usdc",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IERC20)366",
              "contract": "DYLIMarketplace",
              "src": "contracts/DYLIMarketplace.sol:10"
            },
            {
              "label": "erc1155",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IERC1155)288",
              "contract": "DYLIMarketplace",
              "src": "contracts/DYLIMarketplace.sol:11"
            },
            {
              "label": "royaltyPercentage",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "DYLIMarketplace",
              "src": "contracts/DYLIMarketplace.sol:13"
            },
            {
              "label": "royaltyRecipient",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "DYLIMarketplace",
              "src": "contracts/DYLIMarketplace.sol:14"
            },
            {
              "label": "fixedFee",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "DYLIMarketplace",
              "src": "contracts/DYLIMarketplace.sol:16"
            },
            {
              "label": "paymentToken",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(IERC20)366",
              "contract": "DYLIMarketplace",
              "src": "contracts/DYLIMarketplace.sol:18"
            },
            {
              "label": "listingCount",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "DYLIMarketplace",
              "src": "contracts/DYLIMarketplace.sol:28"
            },
            {
              "label": "offerCount",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "DYLIMarketplace",
              "src": "contracts/DYLIMarketplace.sol:29"
            },
            {
              "label": "listings",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(ListingOrBid)449_storage))",
              "contract": "DYLIMarketplace",
              "src": "contracts/DYLIMarketplace.sol:31"
            },
            {
              "label": "tokenBids",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(ListingOrBid)449_storage))",
              "contract": "DYLIMarketplace",
              "src": "contracts/DYLIMarketplace.sol:32"
            },
            {
              "label": "tokenRoyalties",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "DYLIMarketplace",
              "src": "contracts/DYLIMarketplace.sol:33"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC1155)288": {
              "label": "contract IERC1155",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)366": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(ListingOrBid)449_storage))": {
              "label": "mapping(address => mapping(uint256 => struct DYLIMarketplace.ListingOrBid))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ListingOrBid)449_storage)": {
              "label": "mapping(uint256 => struct DYLIMarketplace.ListingOrBid)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ListingOrBid)449_storage": {
              "label": "struct DYLIMarketplace.ListingOrBid",
              "members": [
                {
                  "label": "seller",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "quantity",
                  "type": "t_uint64",
                  "offset": 20,
                  "slot": "1"
                },
                {
                  "label": "pricePerItem",
                  "type": "t_uint128",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "expirationTime",
                  "type": "t_uint64",
                  "offset": 16,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint128": {
              "label": "uint128",
              "numberOfBytes": "16"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:14",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/DYLIMarketplace.sol:DYLIMarketplace": {
        "src": "contracts/DYLIMarketplace.sol:9",
        "version": {
          "withMetadata": "f901fa5b6e2374a0e0603175f07c544067905929adf8a1b309a58236c6b557b7",
          "withoutMetadata": "f901fa5b6e2374a0e0603175f07c544067905929adf8a1b309a58236c6b557b7",
          "linkedWithoutMetadata": "f901fa5b6e2374a0e0603175f07c544067905929adf8a1b309a58236c6b557b7"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "setUSDCContract(address)",
          "setERC1155Contract(address)",
          "createListing(uint256,uint128,uint64,uint64)",
          "editListing(uint256,uint128,uint64)",
          "cancelListing(uint256)",
          "buyListing(uint256,address,uint64,uint128)",
          "createBid(uint256,uint64,uint64,uint128)",
          "editBid(uint256,uint64,uint64)",
          "cancelBid(uint256)",
          "acceptBid(uint256,address)",
          "setRoyaltyRecipient(address)",
          "setRoyaltyPercentage(uint256)",
          "setTokenRoyalty(uint256,uint256)",
          "setFixedFee(uint256)",
          "withdrawUSDC(uint256)",
          "withdrawETH(uint256)",
          "getBid(uint256)",
          "getListing(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "usdc",
            "src": "contracts/DYLIMarketplace.sol:10"
          },
          {
            "kind": "state-variable-assignment",
            "name": "erc1155",
            "src": "contracts/DYLIMarketplace.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "royaltyPercentage",
            "src": "contracts/DYLIMarketplace.sol:13"
          },
          {
            "kind": "state-variable-assignment",
            "name": "royaltyRecipient",
            "src": "contracts/DYLIMarketplace.sol:14"
          },
          {
            "kind": "state-variable-assignment",
            "name": "fixedFee",
            "src": "contracts/DYLIMarketplace.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "listingCount",
            "src": "contracts/DYLIMarketplace.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "offerCount",
            "src": "contracts/DYLIMarketplace.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "usdc",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IERC20)366",
              "contract": "DYLIMarketplace",
              "src": "contracts/DYLIMarketplace.sol:10"
            },
            {
              "label": "erc1155",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IERC1155)288",
              "contract": "DYLIMarketplace",
              "src": "contracts/DYLIMarketplace.sol:11"
            },
            {
              "label": "royaltyPercentage",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "DYLIMarketplace",
              "src": "contracts/DYLIMarketplace.sol:13"
            },
            {
              "label": "royaltyRecipient",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "DYLIMarketplace",
              "src": "contracts/DYLIMarketplace.sol:14"
            },
            {
              "label": "fixedFee",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "DYLIMarketplace",
              "src": "contracts/DYLIMarketplace.sol:16"
            },
            {
              "label": "paymentToken",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(IERC20)366",
              "contract": "DYLIMarketplace",
              "src": "contracts/DYLIMarketplace.sol:18"
            },
            {
              "label": "listingCount",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "DYLIMarketplace",
              "src": "contracts/DYLIMarketplace.sol:28"
            },
            {
              "label": "offerCount",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "DYLIMarketplace",
              "src": "contracts/DYLIMarketplace.sol:29"
            },
            {
              "label": "listings",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(ListingOrBid)449_storage))",
              "contract": "DYLIMarketplace",
              "src": "contracts/DYLIMarketplace.sol:31"
            },
            {
              "label": "tokenBids",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(ListingOrBid)449_storage))",
              "contract": "DYLIMarketplace",
              "src": "contracts/DYLIMarketplace.sol:32"
            },
            {
              "label": "tokenRoyalties",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "DYLIMarketplace",
              "src": "contracts/DYLIMarketplace.sol:33"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC1155)288": {
              "label": "contract IERC1155",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)366": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(ListingOrBid)449_storage))": {
              "label": "mapping(address => mapping(uint256 => struct DYLIMarketplace.ListingOrBid))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ListingOrBid)449_storage)": {
              "label": "mapping(uint256 => struct DYLIMarketplace.ListingOrBid)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ListingOrBid)449_storage": {
              "label": "struct DYLIMarketplace.ListingOrBid",
              "members": [
                {
                  "label": "seller",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "quantity",
                  "type": "t_uint64",
                  "offset": 20,
                  "slot": "1"
                },
                {
                  "label": "pricePerItem",
                  "type": "t_uint128",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "expirationTime",
                  "type": "t_uint64",
                  "offset": 16,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint128": {
              "label": "uint128",
              "numberOfBytes": "16"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@limitbreak/creator-token-contracts/contracts/access/OwnablePermissions.sol:OwnablePermissions": {
        "src": "@limitbreak/creator-token-contracts/contracts/access/OwnablePermissions.sol:6",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/erc1155c/ERC1155C.sol:ERC1155C": {
        "src": "@limitbreak/creator-token-contracts/contracts/erc1155c/ERC1155C.sol:14",
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:CreatorTokenBase",
          "@limitbreak/creator-token-contracts/contracts/interfaces/ICreatorToken.sol:ICreatorToken",
          "@limitbreak/creator-token-contracts/contracts/utils/TransferValidation.sol:TransferValidation",
          "@limitbreak/creator-token-contracts/contracts/access/OwnablePermissions.sol:OwnablePermissions",
          "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelin",
          "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelinBase",
          "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            },
            {
              "label": "transferValidator",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ICreatorTokenTransferValidator)321",
              "contract": "CreatorTokenBase",
              "src": "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ICreatorTokenTransferValidator)321": {
              "label": "contract ICreatorTokenTransferValidator",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/erc1155c/ERC1155C.sol:ERC1155CInitializable": {
        "src": "@limitbreak/creator-token-contracts/contracts/erc1155c/ERC1155C.sol:64",
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:CreatorTokenBase",
          "@limitbreak/creator-token-contracts/contracts/interfaces/ICreatorToken.sol:ICreatorToken",
          "@limitbreak/creator-token-contracts/contracts/utils/TransferValidation.sol:TransferValidation",
          "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelinInitializable",
          "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelinBase",
          "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@limitbreak/creator-token-contracts/contracts/access/OwnablePermissions.sol:OwnablePermissions",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            },
            {
              "label": "_erc1155Initialized",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "ERC1155OpenZeppelinInitializable",
              "src": "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:20"
            },
            {
              "label": "transferValidator",
              "offset": 1,
              "slot": "3",
              "type": "t_contract(ICreatorTokenTransferValidator)321",
              "contract": "CreatorTokenBase",
              "src": "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ICreatorTokenTransferValidator)321": {
              "label": "contract ICreatorTokenTransferValidator",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/interfaces/ICreatorToken.sol:ICreatorToken": {
        "src": "@limitbreak/creator-token-contracts/contracts/interfaces/ICreatorToken.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getTransferValidator()",
          "getSecurityPolicy()",
          "getWhitelistedOperators()",
          "getPermittedContractReceivers()",
          "isOperatorWhitelisted(address)",
          "isContractReceiverPermitted(address)",
          "isTransferAllowed(address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/interfaces/ICreatorTokenTransferValidator.sol:ICreatorTokenTransferValidator": {
        "src": "@limitbreak/creator-token-contracts/contracts/interfaces/ICreatorTokenTransferValidator.sol:8",
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/interfaces/IEOARegistry.sol:IEOARegistry",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@limitbreak/creator-token-contracts/contracts/interfaces/ITransferValidator.sol:ITransferValidator",
          "@limitbreak/creator-token-contracts/contracts/interfaces/ITransferSecurityRegistry.sol:ITransferSecurityRegistry"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/interfaces/IEOARegistry.sol:IEOARegistry": {
        "src": "@limitbreak/creator-token-contracts/contracts/interfaces/IEOARegistry.sol:6",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "isVerifiedEOA(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/interfaces/ITransferSecurityRegistry.sol:ITransferSecurityRegistry": {
        "src": "@limitbreak/creator-token-contracts/contracts/interfaces/ITransferSecurityRegistry.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createOperatorWhitelist(string)",
          "createPermittedContractReceiverAllowlist(string)",
          "reassignOwnershipOfOperatorWhitelist(uint120,address)",
          "reassignOwnershipOfPermittedContractReceiverAllowlist(uint120,address)",
          "renounceOwnershipOfOperatorWhitelist(uint120)",
          "renounceOwnershipOfPermittedContractReceiverAllowlist(uint120)",
          "setTransferSecurityLevelOfCollection(address,uint8)",
          "setOperatorWhitelistOfCollection(address,uint120)",
          "setPermittedContractReceiverAllowlistOfCollection(address,uint120)",
          "addOperatorToWhitelist(uint120,address)",
          "addPermittedContractReceiverToAllowlist(uint120,address)",
          "removeOperatorFromWhitelist(uint120,address)",
          "removePermittedContractReceiverFromAllowlist(uint120,address)",
          "getCollectionSecurityPolicy(address)",
          "getWhitelistedOperators(uint120)",
          "getPermittedContractReceivers(uint120)",
          "isOperatorWhitelisted(uint120,address)",
          "isContractReceiverPermitted(uint120,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/interfaces/ITransferValidator.sol:ITransferValidator": {
        "src": "@limitbreak/creator-token-contracts/contracts/interfaces/ITransferValidator.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "applyCollectionTransferPolicy(address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:BasicRoyalties": {
        "src": "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:32",
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:BasicRoyaltiesBase",
          "@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BasicRoyalties",
            "src": "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_defaultRoyaltyInfo",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(RoyaltyInfo)3497_storage",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:30"
            },
            {
              "label": "_tokenRoyaltyInfo",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)3497_storage)",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)3497_storage)": {
              "label": "mapping(uint256 => struct ERC2981.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(RoyaltyInfo)3497_storage": {
              "label": "struct ERC2981.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:BasicRoyaltiesBase": {
        "src": "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_defaultRoyaltyInfo",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(RoyaltyInfo)3497_storage",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:30"
            },
            {
              "label": "_tokenRoyaltyInfo",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)3497_storage)",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)3497_storage)": {
              "label": "mapping(uint256 => struct ERC2981.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(RoyaltyInfo)3497_storage": {
              "label": "struct ERC2981.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:BasicRoyaltiesInitializable": {
        "src": "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:43",
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:BasicRoyaltiesBase",
          "@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_defaultRoyaltyInfo",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(RoyaltyInfo)3497_storage",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:30"
            },
            {
              "label": "_tokenRoyaltyInfo",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)3497_storage)",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)3497_storage)": {
              "label": "mapping(uint256 => struct ERC2981.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(RoyaltyInfo)3497_storage": {
              "label": "struct ERC2981.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelin": {
        "src": "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:12",
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelinBase",
          "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155OpenZeppelin",
            "src": "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelinBase": {
        "src": "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:8",
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelinInitializable": {
        "src": "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:16",
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelinBase",
          "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@limitbreak/creator-token-contracts/contracts/access/OwnablePermissions.sol:OwnablePermissions",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "initializeERC1155(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            },
            {
              "label": "_erc1155Initialized",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "ERC1155OpenZeppelinInitializable",
              "src": "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:CreatorTokenBase": {
        "src": "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:33",
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/interfaces/ICreatorToken.sol:ICreatorToken",
          "@limitbreak/creator-token-contracts/contracts/utils/TransferValidation.sol:TransferValidation",
          "@limitbreak/creator-token-contracts/contracts/access/OwnablePermissions.sol:OwnablePermissions",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "setToDefaultSecurityPolicy()",
          "setToCustomValidatorAndSecurityPolicy(address,uint8,uint120,uint120)",
          "setToCustomSecurityPolicy(uint8,uint120,uint120)",
          "setTransferValidator(address)",
          "getTransferValidator()",
          "getSecurityPolicy()",
          "getWhitelistedOperators()",
          "getPermittedContractReceivers()",
          "isOperatorWhitelisted(address)",
          "isContractReceiverPermitted(address)",
          "isTransferAllowed(address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "transferValidator",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ICreatorTokenTransferValidator)321",
              "contract": "CreatorTokenBase",
              "src": "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:42"
            }
          ],
          "types": {
            "t_contract(ICreatorTokenTransferValidator)321": {
              "label": "contract ICreatorTokenTransferValidator",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/utils/TransferValidation.sol:TransferValidation": {
        "src": "@limitbreak/creator-token-contracts/contracts/utils/TransferValidation.sol:13",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/AccessControl.sol:AccessControl": {
        "src": "@openzeppelin/contracts/access/AccessControl.sol:49",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)1500_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)1500_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)1500_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl": {
        "src": "@openzeppelin/contracts/access/IAccessControl.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981": {
        "src": "@openzeppelin/contracts/interfaces/IERC2981.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:20",
        "version": {
          "withMetadata": "98b6a85f8f366a9b763ef82a2d9b6249a191347537fcde7cc4275307dc99bda6",
          "withoutMetadata": "98b6a85f8f366a9b763ef82a2d9b6249a191347537fcde7cc4275307dc99bda6",
          "linkedWithoutMetadata": "98b6a85f8f366a9b763ef82a2d9b6249a191347537fcde7cc4275307dc99bda6"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string)",
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:14",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI": {
        "src": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:14",
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981": {
        "src": "@openzeppelin/contracts/token/common/ERC2981.sol:24",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_defaultRoyaltyInfo",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(RoyaltyInfo)3497_storage",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:30"
            },
            {
              "label": "_tokenRoyaltyInfo",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)3497_storage)",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)3497_storage)": {
              "label": "mapping(uint256 => struct ERC2981.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(RoyaltyInfo)3497_storage": {
              "label": "struct ERC2981.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "88a06e0619fc0272d6778930b606332cf7a479ea47e90a151b436f7ba414357b",
          "withoutMetadata": "88a06e0619fc0272d6778930b606332cf7a479ea47e90a151b436f7ba414357b",
          "linkedWithoutMetadata": "88a06e0619fc0272d6778930b606332cf7a479ea47e90a151b436f7ba414357b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:11",
        "version": {
          "withMetadata": "7c362e654f131db46412f2b294977ec9c15a2450013d8fd3494a0e4efc9273d6",
          "withoutMetadata": "7c362e654f131db46412f2b294977ec9c15a2450013d8fd3494a0e4efc9273d6",
          "linkedWithoutMetadata": "7c362e654f131db46412f2b294977ec9c15a2450013d8fd3494a0e4efc9273d6"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA": {
        "src": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:14",
        "version": {
          "withMetadata": "8aa3ccb02fc44b7f6d5fe57fa1ff2d68670cfc19ae723cb4a6f5e6a371589867",
          "withoutMetadata": "8aa3ccb02fc44b7f6d5fe57fa1ff2d68670cfc19ae723cb4a6f5e6a371589867",
          "linkedWithoutMetadata": "8aa3ccb02fc44b7f6d5fe57fa1ff2d68670cfc19ae723cb4a6f5e6a371589867"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "2b0a51ea28eaa98203f82591b27f917d6aaffcd422cc433c3e8fe727eb017ab5",
          "withoutMetadata": "2b0a51ea28eaa98203f82591b27f917d6aaffcd422cc433c3e8fe727eb017ab5",
          "linkedWithoutMetadata": "2b0a51ea28eaa98203f82591b27f917d6aaffcd422cc433c3e8fe727eb017ab5"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/DYLI.sol:DYLI": {
        "src": "contracts/DYLI.sol:12",
        "version": {
          "withMetadata": "e4c5b0178392d9c1f27607e6a68dcf8d8e691709009dae2ee52bb62d668d0520",
          "withoutMetadata": "e4c5b0178392d9c1f27607e6a68dcf8d8e691709009dae2ee52bb62d668d0520",
          "linkedWithoutMetadata": "e4c5b0178392d9c1f27607e6a68dcf8d8e691709009dae2ee52bb62d668d0520"
        },
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:BasicRoyalties",
          "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:BasicRoyaltiesBase",
          "@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@limitbreak/creator-token-contracts/contracts/erc1155c/ERC1155C.sol:ERC1155C",
          "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:CreatorTokenBase",
          "@limitbreak/creator-token-contracts/contracts/interfaces/ICreatorToken.sol:ICreatorToken",
          "@limitbreak/creator-token-contracts/contracts/utils/TransferValidation.sol:TransferValidation",
          "@limitbreak/creator-token-contracts/contracts/access/OwnablePermissions.sol:OwnablePermissions",
          "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelin",
          "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelinBase",
          "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,address,address,address,uint96)",
          "name()",
          "symbol()",
          "setURI(string)",
          "setFeeRecipient(address)",
          "setFee(uint256)",
          "setCreateFee(uint256)",
          "setSigner(address)",
          "createDrop(uint256,uint256,bool,bool,bytes,uint256,uint256,uint256,uint256)",
          "mintToken(uint256,bytes,uint256,bool)",
          "batchRedeem(uint256[],uint256,uint256[],bytes)",
          "refundToken(uint256,uint256,bytes,uint256)",
          "disableToken(uint256,bool)",
          "setAdmin(address,bool)",
          "setMarketplace(address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "updateClaimableTokens(uint256)",
          "reserveSafeWithdraw()",
          "fullWithdraw()",
          "setReservedTokens(uint256)",
          "uri(uint256)",
          "supportsInterface(bytes4)",
          "ownerCreateDrop(uint256,uint256,bool,uint256,uint256,uint256)",
          "ownerMintToken(uint256,address,uint256)",
          "ownerRedeem(uint256,address,uint256)",
          "ownerRefund(uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DYLI",
            "src": "contracts/DYLI.sol:76"
          },
          {
            "kind": "state-variable-assignment",
            "name": "usdc",
            "src": "contracts/DYLI.sol:14"
          },
          {
            "kind": "state-variable-assignment",
            "name": "currentTokenId",
            "src": "contracts/DYLI.sol:40"
          },
          {
            "kind": "state-variable-assignment",
            "name": "feeRecipient",
            "src": "contracts/DYLI.sol:42"
          },
          {
            "kind": "state-variable-assignment",
            "name": "signerAddress",
            "src": "contracts/DYLI.sol:43"
          },
          {
            "kind": "state-variable-assignment",
            "name": "fee",
            "src": "contracts/DYLI.sol:44"
          },
          {
            "kind": "state-variable-assignment",
            "name": "createFee",
            "src": "contracts/DYLI.sol:45"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservedTokens",
            "src": "contracts/DYLI.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            },
            {
              "label": "transferValidator",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ICreatorTokenTransferValidator)321",
              "contract": "CreatorTokenBase",
              "src": "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:42"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_defaultRoyaltyInfo",
              "offset": 0,
              "slot": "5",
              "type": "t_struct(RoyaltyInfo)3497_storage",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:30"
            },
            {
              "label": "_tokenRoyaltyInfo",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)3497_storage)",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:31"
            },
            {
              "label": "usdc",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(IERC20)3483",
              "contract": "DYLI",
              "src": "contracts/DYLI.sol:14"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "DYLI",
              "src": "contracts/DYLI.sol:28"
            },
            {
              "label": "tokenData",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_struct(TokenData)5653_storage)",
              "contract": "DYLI",
              "src": "contracts/DYLI.sol:30"
            },
            {
              "label": "tokenDisabled",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "DYLI",
              "src": "contracts/DYLI.sol:31"
            },
            {
              "label": "totalMinted",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "DYLI",
              "src": "contracts/DYLI.sol:33"
            },
            {
              "label": "totalRefunded",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "DYLI",
              "src": "contracts/DYLI.sol:34"
            },
            {
              "label": "totalRedeemed",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "DYLI",
              "src": "contracts/DYLI.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "DYLI",
              "src": "contracts/DYLI.sol:37"
            },
            {
              "label": "nonceUsed",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "DYLI",
              "src": "contracts/DYLI.sol:38"
            },
            {
              "label": "currentTokenId",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "DYLI",
              "src": "contracts/DYLI.sol:40"
            },
            {
              "label": "feeRecipient",
              "offset": 0,
              "slot": "17",
              "type": "t_address",
              "contract": "DYLI",
              "src": "contracts/DYLI.sol:42"
            },
            {
              "label": "signerAddress",
              "offset": 0,
              "slot": "18",
              "type": "t_address",
              "contract": "DYLI",
              "src": "contracts/DYLI.sol:43"
            },
            {
              "label": "fee",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "DYLI",
              "src": "contracts/DYLI.sol:44"
            },
            {
              "label": "createFee",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "DYLI",
              "src": "contracts/DYLI.sol:45"
            },
            {
              "label": "marketplace",
              "offset": 0,
              "slot": "21",
              "type": "t_address",
              "contract": "DYLI",
              "src": "contracts/DYLI.sol:47"
            },
            {
              "label": "BASE_URI",
              "offset": 0,
              "slot": "22",
              "type": "t_string_storage",
              "contract": "DYLI",
              "src": "contracts/DYLI.sol:48"
            },
            {
              "label": "reservedTokens",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "DYLI",
              "src": "contracts/DYLI.sol:50"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ICreatorTokenTransferValidator)321": {
              "label": "contract ICreatorTokenTransferValidator",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)3483": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
              "label": "mapping(address => mapping(uint256 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)3497_storage)": {
              "label": "mapping(uint256 => struct ERC2981.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenData)5653_storage)": {
              "label": "mapping(uint256 => struct DYLI.TokenData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RoyaltyInfo)3497_storage": {
              "label": "struct ERC2981.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(TokenData)5653_storage": {
              "label": "struct DYLI.TokenData",
              "members": [
                {
                  "label": "maxMint",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "startTimestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "minMint",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "tokensReserved",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "creator",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "reserveFreed",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "6"
                },
                {
                  "label": "isOE",
                  "type": "t_bool",
                  "offset": 21,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@limitbreak/creator-token-contracts/contracts/access/OwnablePermissions.sol:OwnablePermissions": {
        "src": "@limitbreak/creator-token-contracts/contracts/access/OwnablePermissions.sol:6",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/erc1155c/ERC1155C.sol:ERC1155C": {
        "src": "@limitbreak/creator-token-contracts/contracts/erc1155c/ERC1155C.sol:14",
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:CreatorTokenBase",
          "@limitbreak/creator-token-contracts/contracts/interfaces/ICreatorToken.sol:ICreatorToken",
          "@limitbreak/creator-token-contracts/contracts/utils/TransferValidation.sol:TransferValidation",
          "@limitbreak/creator-token-contracts/contracts/access/OwnablePermissions.sol:OwnablePermissions",
          "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelin",
          "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelinBase",
          "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            },
            {
              "label": "transferValidator",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ICreatorTokenTransferValidator)321",
              "contract": "CreatorTokenBase",
              "src": "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ICreatorTokenTransferValidator)321": {
              "label": "contract ICreatorTokenTransferValidator",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/erc1155c/ERC1155C.sol:ERC1155CInitializable": {
        "src": "@limitbreak/creator-token-contracts/contracts/erc1155c/ERC1155C.sol:64",
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:CreatorTokenBase",
          "@limitbreak/creator-token-contracts/contracts/interfaces/ICreatorToken.sol:ICreatorToken",
          "@limitbreak/creator-token-contracts/contracts/utils/TransferValidation.sol:TransferValidation",
          "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelinInitializable",
          "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelinBase",
          "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@limitbreak/creator-token-contracts/contracts/access/OwnablePermissions.sol:OwnablePermissions",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            },
            {
              "label": "_erc1155Initialized",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "ERC1155OpenZeppelinInitializable",
              "src": "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:20"
            },
            {
              "label": "transferValidator",
              "offset": 1,
              "slot": "3",
              "type": "t_contract(ICreatorTokenTransferValidator)321",
              "contract": "CreatorTokenBase",
              "src": "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ICreatorTokenTransferValidator)321": {
              "label": "contract ICreatorTokenTransferValidator",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/interfaces/ICreatorToken.sol:ICreatorToken": {
        "src": "@limitbreak/creator-token-contracts/contracts/interfaces/ICreatorToken.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getTransferValidator()",
          "getSecurityPolicy()",
          "getWhitelistedOperators()",
          "getPermittedContractReceivers()",
          "isOperatorWhitelisted(address)",
          "isContractReceiverPermitted(address)",
          "isTransferAllowed(address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/interfaces/ICreatorTokenTransferValidator.sol:ICreatorTokenTransferValidator": {
        "src": "@limitbreak/creator-token-contracts/contracts/interfaces/ICreatorTokenTransferValidator.sol:8",
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/interfaces/IEOARegistry.sol:IEOARegistry",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@limitbreak/creator-token-contracts/contracts/interfaces/ITransferValidator.sol:ITransferValidator",
          "@limitbreak/creator-token-contracts/contracts/interfaces/ITransferSecurityRegistry.sol:ITransferSecurityRegistry"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/interfaces/IEOARegistry.sol:IEOARegistry": {
        "src": "@limitbreak/creator-token-contracts/contracts/interfaces/IEOARegistry.sol:6",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "isVerifiedEOA(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/interfaces/ITransferSecurityRegistry.sol:ITransferSecurityRegistry": {
        "src": "@limitbreak/creator-token-contracts/contracts/interfaces/ITransferSecurityRegistry.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createOperatorWhitelist(string)",
          "createPermittedContractReceiverAllowlist(string)",
          "reassignOwnershipOfOperatorWhitelist(uint120,address)",
          "reassignOwnershipOfPermittedContractReceiverAllowlist(uint120,address)",
          "renounceOwnershipOfOperatorWhitelist(uint120)",
          "renounceOwnershipOfPermittedContractReceiverAllowlist(uint120)",
          "setTransferSecurityLevelOfCollection(address,uint8)",
          "setOperatorWhitelistOfCollection(address,uint120)",
          "setPermittedContractReceiverAllowlistOfCollection(address,uint120)",
          "addOperatorToWhitelist(uint120,address)",
          "addPermittedContractReceiverToAllowlist(uint120,address)",
          "removeOperatorFromWhitelist(uint120,address)",
          "removePermittedContractReceiverFromAllowlist(uint120,address)",
          "getCollectionSecurityPolicy(address)",
          "getWhitelistedOperators(uint120)",
          "getPermittedContractReceivers(uint120)",
          "isOperatorWhitelisted(uint120,address)",
          "isContractReceiverPermitted(uint120,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/interfaces/ITransferValidator.sol:ITransferValidator": {
        "src": "@limitbreak/creator-token-contracts/contracts/interfaces/ITransferValidator.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "applyCollectionTransferPolicy(address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:BasicRoyalties": {
        "src": "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:32",
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:BasicRoyaltiesBase",
          "@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BasicRoyalties",
            "src": "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_defaultRoyaltyInfo",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(RoyaltyInfo)3497_storage",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:30"
            },
            {
              "label": "_tokenRoyaltyInfo",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)3497_storage)",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)3497_storage)": {
              "label": "mapping(uint256 => struct ERC2981.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(RoyaltyInfo)3497_storage": {
              "label": "struct ERC2981.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:BasicRoyaltiesBase": {
        "src": "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_defaultRoyaltyInfo",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(RoyaltyInfo)3497_storage",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:30"
            },
            {
              "label": "_tokenRoyaltyInfo",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)3497_storage)",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)3497_storage)": {
              "label": "mapping(uint256 => struct ERC2981.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(RoyaltyInfo)3497_storage": {
              "label": "struct ERC2981.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:BasicRoyaltiesInitializable": {
        "src": "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:43",
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:BasicRoyaltiesBase",
          "@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_defaultRoyaltyInfo",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(RoyaltyInfo)3497_storage",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:30"
            },
            {
              "label": "_tokenRoyaltyInfo",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)3497_storage)",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)3497_storage)": {
              "label": "mapping(uint256 => struct ERC2981.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(RoyaltyInfo)3497_storage": {
              "label": "struct ERC2981.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelin": {
        "src": "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:12",
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelinBase",
          "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155OpenZeppelin",
            "src": "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelinBase": {
        "src": "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:8",
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelinInitializable": {
        "src": "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:16",
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelinBase",
          "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@limitbreak/creator-token-contracts/contracts/access/OwnablePermissions.sol:OwnablePermissions",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "initializeERC1155(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            },
            {
              "label": "_erc1155Initialized",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "ERC1155OpenZeppelinInitializable",
              "src": "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:CreatorTokenBase": {
        "src": "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:33",
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/interfaces/ICreatorToken.sol:ICreatorToken",
          "@limitbreak/creator-token-contracts/contracts/utils/TransferValidation.sol:TransferValidation",
          "@limitbreak/creator-token-contracts/contracts/access/OwnablePermissions.sol:OwnablePermissions",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "setToDefaultSecurityPolicy()",
          "setToCustomValidatorAndSecurityPolicy(address,uint8,uint120,uint120)",
          "setToCustomSecurityPolicy(uint8,uint120,uint120)",
          "setTransferValidator(address)",
          "getTransferValidator()",
          "getSecurityPolicy()",
          "getWhitelistedOperators()",
          "getPermittedContractReceivers()",
          "isOperatorWhitelisted(address)",
          "isContractReceiverPermitted(address)",
          "isTransferAllowed(address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "transferValidator",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ICreatorTokenTransferValidator)321",
              "contract": "CreatorTokenBase",
              "src": "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:42"
            }
          ],
          "types": {
            "t_contract(ICreatorTokenTransferValidator)321": {
              "label": "contract ICreatorTokenTransferValidator",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/utils/TransferValidation.sol:TransferValidation": {
        "src": "@limitbreak/creator-token-contracts/contracts/utils/TransferValidation.sol:13",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/AccessControl.sol:AccessControl": {
        "src": "@openzeppelin/contracts/access/AccessControl.sol:49",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)1500_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)1500_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)1500_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl": {
        "src": "@openzeppelin/contracts/access/IAccessControl.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981": {
        "src": "@openzeppelin/contracts/interfaces/IERC2981.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:20",
        "version": {
          "withMetadata": "98b6a85f8f366a9b763ef82a2d9b6249a191347537fcde7cc4275307dc99bda6",
          "withoutMetadata": "98b6a85f8f366a9b763ef82a2d9b6249a191347537fcde7cc4275307dc99bda6",
          "linkedWithoutMetadata": "98b6a85f8f366a9b763ef82a2d9b6249a191347537fcde7cc4275307dc99bda6"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string)",
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:14",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI": {
        "src": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:14",
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981": {
        "src": "@openzeppelin/contracts/token/common/ERC2981.sol:24",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_defaultRoyaltyInfo",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(RoyaltyInfo)3497_storage",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:30"
            },
            {
              "label": "_tokenRoyaltyInfo",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)3497_storage)",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)3497_storage)": {
              "label": "mapping(uint256 => struct ERC2981.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(RoyaltyInfo)3497_storage": {
              "label": "struct ERC2981.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "88a06e0619fc0272d6778930b606332cf7a479ea47e90a151b436f7ba414357b",
          "withoutMetadata": "88a06e0619fc0272d6778930b606332cf7a479ea47e90a151b436f7ba414357b",
          "linkedWithoutMetadata": "88a06e0619fc0272d6778930b606332cf7a479ea47e90a151b436f7ba414357b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:11",
        "version": {
          "withMetadata": "7c362e654f131db46412f2b294977ec9c15a2450013d8fd3494a0e4efc9273d6",
          "withoutMetadata": "7c362e654f131db46412f2b294977ec9c15a2450013d8fd3494a0e4efc9273d6",
          "linkedWithoutMetadata": "7c362e654f131db46412f2b294977ec9c15a2450013d8fd3494a0e4efc9273d6"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA": {
        "src": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:14",
        "version": {
          "withMetadata": "8aa3ccb02fc44b7f6d5fe57fa1ff2d68670cfc19ae723cb4a6f5e6a371589867",
          "withoutMetadata": "8aa3ccb02fc44b7f6d5fe57fa1ff2d68670cfc19ae723cb4a6f5e6a371589867",
          "linkedWithoutMetadata": "8aa3ccb02fc44b7f6d5fe57fa1ff2d68670cfc19ae723cb4a6f5e6a371589867"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "2b0a51ea28eaa98203f82591b27f917d6aaffcd422cc433c3e8fe727eb017ab5",
          "withoutMetadata": "2b0a51ea28eaa98203f82591b27f917d6aaffcd422cc433c3e8fe727eb017ab5",
          "linkedWithoutMetadata": "2b0a51ea28eaa98203f82591b27f917d6aaffcd422cc433c3e8fe727eb017ab5"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/DYLI.sol:DYLI": {
        "src": "contracts/DYLI.sol:12",
        "version": {
          "withMetadata": "b7b5020ba9fa96f437833e156318524f774aeaeb08e52aca8453a1a50bec7891",
          "withoutMetadata": "b7b5020ba9fa96f437833e156318524f774aeaeb08e52aca8453a1a50bec7891",
          "linkedWithoutMetadata": "b7b5020ba9fa96f437833e156318524f774aeaeb08e52aca8453a1a50bec7891"
        },
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:BasicRoyalties",
          "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:BasicRoyaltiesBase",
          "@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@limitbreak/creator-token-contracts/contracts/erc1155c/ERC1155C.sol:ERC1155C",
          "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:CreatorTokenBase",
          "@limitbreak/creator-token-contracts/contracts/interfaces/ICreatorToken.sol:ICreatorToken",
          "@limitbreak/creator-token-contracts/contracts/utils/TransferValidation.sol:TransferValidation",
          "@limitbreak/creator-token-contracts/contracts/access/OwnablePermissions.sol:OwnablePermissions",
          "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelin",
          "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelinBase",
          "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,address,address,address,uint96)",
          "name()",
          "symbol()",
          "setURI(string)",
          "setFeeRecipient(address)",
          "setFee(uint256)",
          "setCreateFee(uint256)",
          "setSigner(address)",
          "createDrop(uint256,uint256,bool,bool,bytes,uint256,uint256,uint256,uint256)",
          "mintToken(uint256,bytes,uint256,bool)",
          "batchRedeem(uint256[],uint256,uint256[],bytes)",
          "refundToken(uint256,uint256,bytes,uint256)",
          "disableToken(uint256,bool)",
          "setAdmin(address,bool)",
          "setMarketplace(address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "updateClaimableTokens(uint256)",
          "reserveSafeWithdraw()",
          "fullWithdraw()",
          "setReservedTokens(uint256)",
          "uri(uint256)",
          "supportsInterface(bytes4)",
          "ownerCreateDrop(uint256,uint256,bool,uint256,uint256,uint256)",
          "ownerMintToken(uint256,address,uint256)",
          "ownerRedeem(uint256,address,uint256)",
          "ownerRefund(uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DYLI",
            "src": "contracts/DYLI.sol:76"
          },
          {
            "kind": "state-variable-assignment",
            "name": "usdc",
            "src": "contracts/DYLI.sol:14"
          },
          {
            "kind": "state-variable-assignment",
            "name": "currentTokenId",
            "src": "contracts/DYLI.sol:40"
          },
          {
            "kind": "state-variable-assignment",
            "name": "feeRecipient",
            "src": "contracts/DYLI.sol:42"
          },
          {
            "kind": "state-variable-assignment",
            "name": "signerAddress",
            "src": "contracts/DYLI.sol:43"
          },
          {
            "kind": "state-variable-assignment",
            "name": "fee",
            "src": "contracts/DYLI.sol:44"
          },
          {
            "kind": "state-variable-assignment",
            "name": "createFee",
            "src": "contracts/DYLI.sol:45"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservedTokens",
            "src": "contracts/DYLI.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            },
            {
              "label": "transferValidator",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ICreatorTokenTransferValidator)321",
              "contract": "CreatorTokenBase",
              "src": "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:42"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_defaultRoyaltyInfo",
              "offset": 0,
              "slot": "5",
              "type": "t_struct(RoyaltyInfo)3497_storage",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:30"
            },
            {
              "label": "_tokenRoyaltyInfo",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)3497_storage)",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:31"
            },
            {
              "label": "usdc",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(IERC20)3483",
              "contract": "DYLI",
              "src": "contracts/DYLI.sol:14"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "DYLI",
              "src": "contracts/DYLI.sol:28"
            },
            {
              "label": "tokenData",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_struct(TokenData)5653_storage)",
              "contract": "DYLI",
              "src": "contracts/DYLI.sol:30"
            },
            {
              "label": "tokenDisabled",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "DYLI",
              "src": "contracts/DYLI.sol:31"
            },
            {
              "label": "totalMinted",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "DYLI",
              "src": "contracts/DYLI.sol:33"
            },
            {
              "label": "totalRefunded",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "DYLI",
              "src": "contracts/DYLI.sol:34"
            },
            {
              "label": "totalRedeemed",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "DYLI",
              "src": "contracts/DYLI.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "DYLI",
              "src": "contracts/DYLI.sol:37"
            },
            {
              "label": "nonceUsed",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "DYLI",
              "src": "contracts/DYLI.sol:38"
            },
            {
              "label": "currentTokenId",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "DYLI",
              "src": "contracts/DYLI.sol:40"
            },
            {
              "label": "feeRecipient",
              "offset": 0,
              "slot": "17",
              "type": "t_address",
              "contract": "DYLI",
              "src": "contracts/DYLI.sol:42"
            },
            {
              "label": "signerAddress",
              "offset": 0,
              "slot": "18",
              "type": "t_address",
              "contract": "DYLI",
              "src": "contracts/DYLI.sol:43"
            },
            {
              "label": "fee",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "DYLI",
              "src": "contracts/DYLI.sol:44"
            },
            {
              "label": "createFee",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "DYLI",
              "src": "contracts/DYLI.sol:45"
            },
            {
              "label": "marketplace",
              "offset": 0,
              "slot": "21",
              "type": "t_address",
              "contract": "DYLI",
              "src": "contracts/DYLI.sol:47"
            },
            {
              "label": "BASE_URI",
              "offset": 0,
              "slot": "22",
              "type": "t_string_storage",
              "contract": "DYLI",
              "src": "contracts/DYLI.sol:48"
            },
            {
              "label": "reservedTokens",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "DYLI",
              "src": "contracts/DYLI.sol:50"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ICreatorTokenTransferValidator)321": {
              "label": "contract ICreatorTokenTransferValidator",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)3483": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
              "label": "mapping(address => mapping(uint256 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)3497_storage)": {
              "label": "mapping(uint256 => struct ERC2981.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenData)5653_storage)": {
              "label": "mapping(uint256 => struct DYLI.TokenData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RoyaltyInfo)3497_storage": {
              "label": "struct ERC2981.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(TokenData)5653_storage": {
              "label": "struct DYLI.TokenData",
              "members": [
                {
                  "label": "maxMint",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "startTimestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "minMint",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "tokensReserved",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "creator",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "reserveFreed",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "6"
                },
                {
                  "label": "isOE",
                  "type": "t_bool",
                  "offset": 21,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@limitbreak/creator-token-contracts/contracts/access/OwnablePermissions.sol:OwnablePermissions": {
        "src": "@limitbreak/creator-token-contracts/contracts/access/OwnablePermissions.sol:6",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/erc1155c/ERC1155C.sol:ERC1155C": {
        "src": "@limitbreak/creator-token-contracts/contracts/erc1155c/ERC1155C.sol:14",
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:CreatorTokenBase",
          "@limitbreak/creator-token-contracts/contracts/interfaces/ICreatorToken.sol:ICreatorToken",
          "@limitbreak/creator-token-contracts/contracts/utils/TransferValidation.sol:TransferValidation",
          "@limitbreak/creator-token-contracts/contracts/access/OwnablePermissions.sol:OwnablePermissions",
          "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelin",
          "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelinBase",
          "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            },
            {
              "label": "transferValidator",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ICreatorTokenTransferValidator)321",
              "contract": "CreatorTokenBase",
              "src": "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ICreatorTokenTransferValidator)321": {
              "label": "contract ICreatorTokenTransferValidator",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/erc1155c/ERC1155C.sol:ERC1155CInitializable": {
        "src": "@limitbreak/creator-token-contracts/contracts/erc1155c/ERC1155C.sol:64",
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:CreatorTokenBase",
          "@limitbreak/creator-token-contracts/contracts/interfaces/ICreatorToken.sol:ICreatorToken",
          "@limitbreak/creator-token-contracts/contracts/utils/TransferValidation.sol:TransferValidation",
          "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelinInitializable",
          "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelinBase",
          "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@limitbreak/creator-token-contracts/contracts/access/OwnablePermissions.sol:OwnablePermissions",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            },
            {
              "label": "_erc1155Initialized",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "ERC1155OpenZeppelinInitializable",
              "src": "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:20"
            },
            {
              "label": "transferValidator",
              "offset": 1,
              "slot": "3",
              "type": "t_contract(ICreatorTokenTransferValidator)321",
              "contract": "CreatorTokenBase",
              "src": "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ICreatorTokenTransferValidator)321": {
              "label": "contract ICreatorTokenTransferValidator",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/interfaces/ICreatorToken.sol:ICreatorToken": {
        "src": "@limitbreak/creator-token-contracts/contracts/interfaces/ICreatorToken.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getTransferValidator()",
          "getSecurityPolicy()",
          "getWhitelistedOperators()",
          "getPermittedContractReceivers()",
          "isOperatorWhitelisted(address)",
          "isContractReceiverPermitted(address)",
          "isTransferAllowed(address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/interfaces/ICreatorTokenTransferValidator.sol:ICreatorTokenTransferValidator": {
        "src": "@limitbreak/creator-token-contracts/contracts/interfaces/ICreatorTokenTransferValidator.sol:8",
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/interfaces/IEOARegistry.sol:IEOARegistry",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@limitbreak/creator-token-contracts/contracts/interfaces/ITransferValidator.sol:ITransferValidator",
          "@limitbreak/creator-token-contracts/contracts/interfaces/ITransferSecurityRegistry.sol:ITransferSecurityRegistry"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/interfaces/IEOARegistry.sol:IEOARegistry": {
        "src": "@limitbreak/creator-token-contracts/contracts/interfaces/IEOARegistry.sol:6",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "isVerifiedEOA(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/interfaces/ITransferSecurityRegistry.sol:ITransferSecurityRegistry": {
        "src": "@limitbreak/creator-token-contracts/contracts/interfaces/ITransferSecurityRegistry.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createOperatorWhitelist(string)",
          "createPermittedContractReceiverAllowlist(string)",
          "reassignOwnershipOfOperatorWhitelist(uint120,address)",
          "reassignOwnershipOfPermittedContractReceiverAllowlist(uint120,address)",
          "renounceOwnershipOfOperatorWhitelist(uint120)",
          "renounceOwnershipOfPermittedContractReceiverAllowlist(uint120)",
          "setTransferSecurityLevelOfCollection(address,uint8)",
          "setOperatorWhitelistOfCollection(address,uint120)",
          "setPermittedContractReceiverAllowlistOfCollection(address,uint120)",
          "addOperatorToWhitelist(uint120,address)",
          "addPermittedContractReceiverToAllowlist(uint120,address)",
          "removeOperatorFromWhitelist(uint120,address)",
          "removePermittedContractReceiverFromAllowlist(uint120,address)",
          "getCollectionSecurityPolicy(address)",
          "getWhitelistedOperators(uint120)",
          "getPermittedContractReceivers(uint120)",
          "isOperatorWhitelisted(uint120,address)",
          "isContractReceiverPermitted(uint120,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/interfaces/ITransferValidator.sol:ITransferValidator": {
        "src": "@limitbreak/creator-token-contracts/contracts/interfaces/ITransferValidator.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "applyCollectionTransferPolicy(address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:BasicRoyalties": {
        "src": "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:32",
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:BasicRoyaltiesBase",
          "@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BasicRoyalties",
            "src": "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_defaultRoyaltyInfo",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(RoyaltyInfo)3497_storage",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:30"
            },
            {
              "label": "_tokenRoyaltyInfo",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)3497_storage)",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)3497_storage)": {
              "label": "mapping(uint256 => struct ERC2981.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(RoyaltyInfo)3497_storage": {
              "label": "struct ERC2981.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:BasicRoyaltiesBase": {
        "src": "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_defaultRoyaltyInfo",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(RoyaltyInfo)3497_storage",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:30"
            },
            {
              "label": "_tokenRoyaltyInfo",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)3497_storage)",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)3497_storage)": {
              "label": "mapping(uint256 => struct ERC2981.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(RoyaltyInfo)3497_storage": {
              "label": "struct ERC2981.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:BasicRoyaltiesInitializable": {
        "src": "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:43",
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:BasicRoyaltiesBase",
          "@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_defaultRoyaltyInfo",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(RoyaltyInfo)3497_storage",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:30"
            },
            {
              "label": "_tokenRoyaltyInfo",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)3497_storage)",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)3497_storage)": {
              "label": "mapping(uint256 => struct ERC2981.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(RoyaltyInfo)3497_storage": {
              "label": "struct ERC2981.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelin": {
        "src": "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:12",
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelinBase",
          "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155OpenZeppelin",
            "src": "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelinBase": {
        "src": "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:8",
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelinInitializable": {
        "src": "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:16",
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelinBase",
          "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@limitbreak/creator-token-contracts/contracts/access/OwnablePermissions.sol:OwnablePermissions",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "initializeERC1155(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            },
            {
              "label": "_erc1155Initialized",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "ERC1155OpenZeppelinInitializable",
              "src": "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:CreatorTokenBase": {
        "src": "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:33",
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/interfaces/ICreatorToken.sol:ICreatorToken",
          "@limitbreak/creator-token-contracts/contracts/utils/TransferValidation.sol:TransferValidation",
          "@limitbreak/creator-token-contracts/contracts/access/OwnablePermissions.sol:OwnablePermissions",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "setToDefaultSecurityPolicy()",
          "setToCustomValidatorAndSecurityPolicy(address,uint8,uint120,uint120)",
          "setToCustomSecurityPolicy(uint8,uint120,uint120)",
          "setTransferValidator(address)",
          "getTransferValidator()",
          "getSecurityPolicy()",
          "getWhitelistedOperators()",
          "getPermittedContractReceivers()",
          "isOperatorWhitelisted(address)",
          "isContractReceiverPermitted(address)",
          "isTransferAllowed(address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "transferValidator",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ICreatorTokenTransferValidator)321",
              "contract": "CreatorTokenBase",
              "src": "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:42"
            }
          ],
          "types": {
            "t_contract(ICreatorTokenTransferValidator)321": {
              "label": "contract ICreatorTokenTransferValidator",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/utils/TransferValidation.sol:TransferValidation": {
        "src": "@limitbreak/creator-token-contracts/contracts/utils/TransferValidation.sol:13",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/AccessControl.sol:AccessControl": {
        "src": "@openzeppelin/contracts/access/AccessControl.sol:49",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)1500_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)1500_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)1500_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl": {
        "src": "@openzeppelin/contracts/access/IAccessControl.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981": {
        "src": "@openzeppelin/contracts/interfaces/IERC2981.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:20",
        "version": {
          "withMetadata": "98b6a85f8f366a9b763ef82a2d9b6249a191347537fcde7cc4275307dc99bda6",
          "withoutMetadata": "98b6a85f8f366a9b763ef82a2d9b6249a191347537fcde7cc4275307dc99bda6",
          "linkedWithoutMetadata": "98b6a85f8f366a9b763ef82a2d9b6249a191347537fcde7cc4275307dc99bda6"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string)",
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:14",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI": {
        "src": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:14",
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981": {
        "src": "@openzeppelin/contracts/token/common/ERC2981.sol:24",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_defaultRoyaltyInfo",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(RoyaltyInfo)3497_storage",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:30"
            },
            {
              "label": "_tokenRoyaltyInfo",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)3497_storage)",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)3497_storage)": {
              "label": "mapping(uint256 => struct ERC2981.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(RoyaltyInfo)3497_storage": {
              "label": "struct ERC2981.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "88a06e0619fc0272d6778930b606332cf7a479ea47e90a151b436f7ba414357b",
          "withoutMetadata": "88a06e0619fc0272d6778930b606332cf7a479ea47e90a151b436f7ba414357b",
          "linkedWithoutMetadata": "88a06e0619fc0272d6778930b606332cf7a479ea47e90a151b436f7ba414357b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:11",
        "version": {
          "withMetadata": "7c362e654f131db46412f2b294977ec9c15a2450013d8fd3494a0e4efc9273d6",
          "withoutMetadata": "7c362e654f131db46412f2b294977ec9c15a2450013d8fd3494a0e4efc9273d6",
          "linkedWithoutMetadata": "7c362e654f131db46412f2b294977ec9c15a2450013d8fd3494a0e4efc9273d6"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA": {
        "src": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:14",
        "version": {
          "withMetadata": "8aa3ccb02fc44b7f6d5fe57fa1ff2d68670cfc19ae723cb4a6f5e6a371589867",
          "withoutMetadata": "8aa3ccb02fc44b7f6d5fe57fa1ff2d68670cfc19ae723cb4a6f5e6a371589867",
          "linkedWithoutMetadata": "8aa3ccb02fc44b7f6d5fe57fa1ff2d68670cfc19ae723cb4a6f5e6a371589867"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "2b0a51ea28eaa98203f82591b27f917d6aaffcd422cc433c3e8fe727eb017ab5",
          "withoutMetadata": "2b0a51ea28eaa98203f82591b27f917d6aaffcd422cc433c3e8fe727eb017ab5",
          "linkedWithoutMetadata": "2b0a51ea28eaa98203f82591b27f917d6aaffcd422cc433c3e8fe727eb017ab5"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/DYLI.sol:DYLI": {
        "src": "contracts/DYLI.sol:12",
        "version": {
          "withMetadata": "e6333c5563b9681579261d09b262770846500637dcae548fa7ecc4b5659eb2ad",
          "withoutMetadata": "e6333c5563b9681579261d09b262770846500637dcae548fa7ecc4b5659eb2ad",
          "linkedWithoutMetadata": "e6333c5563b9681579261d09b262770846500637dcae548fa7ecc4b5659eb2ad"
        },
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:BasicRoyalties",
          "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:BasicRoyaltiesBase",
          "@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@limitbreak/creator-token-contracts/contracts/erc1155c/ERC1155C.sol:ERC1155C",
          "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:CreatorTokenBase",
          "@limitbreak/creator-token-contracts/contracts/interfaces/ICreatorToken.sol:ICreatorToken",
          "@limitbreak/creator-token-contracts/contracts/utils/TransferValidation.sol:TransferValidation",
          "@limitbreak/creator-token-contracts/contracts/access/OwnablePermissions.sol:OwnablePermissions",
          "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelin",
          "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelinBase",
          "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,address,address,address,uint96)",
          "name()",
          "symbol()",
          "setURI(string)",
          "setFeeRecipient(address)",
          "setFee(uint256)",
          "setCreateFee(uint256)",
          "setSigner(address)",
          "createDrop(uint256,uint256,bool,bool,bytes,uint256,uint256,uint256,uint256)",
          "mintToken(uint256,bytes,uint256,bool)",
          "batchRedeem(uint256[],uint256,bool,uint256[],bytes)",
          "refundToken(uint256,uint256,bytes,uint256)",
          "disableToken(uint256,bool)",
          "setAdmin(address,bool)",
          "setMarketplace(address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "updateClaimableTokens(uint256)",
          "reserveSafeWithdraw()",
          "fullWithdraw()",
          "setReservedTokens(uint256)",
          "uri(uint256)",
          "supportsInterface(bytes4)",
          "ownerCreateDrop(uint256,uint256,bool,uint256,uint256,uint256)",
          "ownerMintToken(uint256,address,uint256)",
          "ownerRedeem(uint256,address,uint256)",
          "ownerRefund(uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DYLI",
            "src": "contracts/DYLI.sol:76"
          },
          {
            "kind": "state-variable-assignment",
            "name": "usdc",
            "src": "contracts/DYLI.sol:14"
          },
          {
            "kind": "state-variable-assignment",
            "name": "currentTokenId",
            "src": "contracts/DYLI.sol:40"
          },
          {
            "kind": "state-variable-assignment",
            "name": "feeRecipient",
            "src": "contracts/DYLI.sol:42"
          },
          {
            "kind": "state-variable-assignment",
            "name": "signerAddress",
            "src": "contracts/DYLI.sol:43"
          },
          {
            "kind": "state-variable-assignment",
            "name": "fee",
            "src": "contracts/DYLI.sol:44"
          },
          {
            "kind": "state-variable-assignment",
            "name": "createFee",
            "src": "contracts/DYLI.sol:45"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservedTokens",
            "src": "contracts/DYLI.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            },
            {
              "label": "transferValidator",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ICreatorTokenTransferValidator)321",
              "contract": "CreatorTokenBase",
              "src": "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:42"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_defaultRoyaltyInfo",
              "offset": 0,
              "slot": "5",
              "type": "t_struct(RoyaltyInfo)3497_storage",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:30"
            },
            {
              "label": "_tokenRoyaltyInfo",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)3497_storage)",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:31"
            },
            {
              "label": "usdc",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(IERC20)3483",
              "contract": "DYLI",
              "src": "contracts/DYLI.sol:14"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "DYLI",
              "src": "contracts/DYLI.sol:28"
            },
            {
              "label": "tokenData",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_struct(TokenData)5653_storage)",
              "contract": "DYLI",
              "src": "contracts/DYLI.sol:30"
            },
            {
              "label": "tokenDisabled",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "DYLI",
              "src": "contracts/DYLI.sol:31"
            },
            {
              "label": "totalMinted",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "DYLI",
              "src": "contracts/DYLI.sol:33"
            },
            {
              "label": "totalRefunded",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "DYLI",
              "src": "contracts/DYLI.sol:34"
            },
            {
              "label": "totalRedeemed",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "DYLI",
              "src": "contracts/DYLI.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "DYLI",
              "src": "contracts/DYLI.sol:37"
            },
            {
              "label": "nonceUsed",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "DYLI",
              "src": "contracts/DYLI.sol:38"
            },
            {
              "label": "currentTokenId",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "DYLI",
              "src": "contracts/DYLI.sol:40"
            },
            {
              "label": "feeRecipient",
              "offset": 0,
              "slot": "17",
              "type": "t_address",
              "contract": "DYLI",
              "src": "contracts/DYLI.sol:42"
            },
            {
              "label": "signerAddress",
              "offset": 0,
              "slot": "18",
              "type": "t_address",
              "contract": "DYLI",
              "src": "contracts/DYLI.sol:43"
            },
            {
              "label": "fee",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "DYLI",
              "src": "contracts/DYLI.sol:44"
            },
            {
              "label": "createFee",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "DYLI",
              "src": "contracts/DYLI.sol:45"
            },
            {
              "label": "marketplace",
              "offset": 0,
              "slot": "21",
              "type": "t_address",
              "contract": "DYLI",
              "src": "contracts/DYLI.sol:47"
            },
            {
              "label": "BASE_URI",
              "offset": 0,
              "slot": "22",
              "type": "t_string_storage",
              "contract": "DYLI",
              "src": "contracts/DYLI.sol:48"
            },
            {
              "label": "reservedTokens",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "DYLI",
              "src": "contracts/DYLI.sol:50"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ICreatorTokenTransferValidator)321": {
              "label": "contract ICreatorTokenTransferValidator",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)3483": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
              "label": "mapping(address => mapping(uint256 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)3497_storage)": {
              "label": "mapping(uint256 => struct ERC2981.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenData)5653_storage)": {
              "label": "mapping(uint256 => struct DYLI.TokenData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RoyaltyInfo)3497_storage": {
              "label": "struct ERC2981.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(TokenData)5653_storage": {
              "label": "struct DYLI.TokenData",
              "members": [
                {
                  "label": "maxMint",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "startTimestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "minMint",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "tokensReserved",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "creator",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "reserveFreed",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "6"
                },
                {
                  "label": "isOE",
                  "type": "t_bool",
                  "offset": 21,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@limitbreak/creator-token-contracts/contracts/access/OwnablePermissions.sol:OwnablePermissions": {
        "src": "@limitbreak/creator-token-contracts/contracts/access/OwnablePermissions.sol:6",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/erc1155c/ERC1155C.sol:ERC1155C": {
        "src": "@limitbreak/creator-token-contracts/contracts/erc1155c/ERC1155C.sol:14",
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:CreatorTokenBase",
          "@limitbreak/creator-token-contracts/contracts/interfaces/ICreatorToken.sol:ICreatorToken",
          "@limitbreak/creator-token-contracts/contracts/utils/TransferValidation.sol:TransferValidation",
          "@limitbreak/creator-token-contracts/contracts/access/OwnablePermissions.sol:OwnablePermissions",
          "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelin",
          "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelinBase",
          "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            },
            {
              "label": "transferValidator",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ICreatorTokenTransferValidator)321",
              "contract": "CreatorTokenBase",
              "src": "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ICreatorTokenTransferValidator)321": {
              "label": "contract ICreatorTokenTransferValidator",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/erc1155c/ERC1155C.sol:ERC1155CInitializable": {
        "src": "@limitbreak/creator-token-contracts/contracts/erc1155c/ERC1155C.sol:64",
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:CreatorTokenBase",
          "@limitbreak/creator-token-contracts/contracts/interfaces/ICreatorToken.sol:ICreatorToken",
          "@limitbreak/creator-token-contracts/contracts/utils/TransferValidation.sol:TransferValidation",
          "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelinInitializable",
          "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelinBase",
          "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@limitbreak/creator-token-contracts/contracts/access/OwnablePermissions.sol:OwnablePermissions",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            },
            {
              "label": "_erc1155Initialized",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "ERC1155OpenZeppelinInitializable",
              "src": "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:20"
            },
            {
              "label": "transferValidator",
              "offset": 1,
              "slot": "3",
              "type": "t_contract(ICreatorTokenTransferValidator)321",
              "contract": "CreatorTokenBase",
              "src": "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ICreatorTokenTransferValidator)321": {
              "label": "contract ICreatorTokenTransferValidator",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/interfaces/ICreatorToken.sol:ICreatorToken": {
        "src": "@limitbreak/creator-token-contracts/contracts/interfaces/ICreatorToken.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getTransferValidator()",
          "getSecurityPolicy()",
          "getWhitelistedOperators()",
          "getPermittedContractReceivers()",
          "isOperatorWhitelisted(address)",
          "isContractReceiverPermitted(address)",
          "isTransferAllowed(address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/interfaces/ICreatorTokenTransferValidator.sol:ICreatorTokenTransferValidator": {
        "src": "@limitbreak/creator-token-contracts/contracts/interfaces/ICreatorTokenTransferValidator.sol:8",
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/interfaces/IEOARegistry.sol:IEOARegistry",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@limitbreak/creator-token-contracts/contracts/interfaces/ITransferValidator.sol:ITransferValidator",
          "@limitbreak/creator-token-contracts/contracts/interfaces/ITransferSecurityRegistry.sol:ITransferSecurityRegistry"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/interfaces/IEOARegistry.sol:IEOARegistry": {
        "src": "@limitbreak/creator-token-contracts/contracts/interfaces/IEOARegistry.sol:6",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "isVerifiedEOA(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/interfaces/ITransferSecurityRegistry.sol:ITransferSecurityRegistry": {
        "src": "@limitbreak/creator-token-contracts/contracts/interfaces/ITransferSecurityRegistry.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createOperatorWhitelist(string)",
          "createPermittedContractReceiverAllowlist(string)",
          "reassignOwnershipOfOperatorWhitelist(uint120,address)",
          "reassignOwnershipOfPermittedContractReceiverAllowlist(uint120,address)",
          "renounceOwnershipOfOperatorWhitelist(uint120)",
          "renounceOwnershipOfPermittedContractReceiverAllowlist(uint120)",
          "setTransferSecurityLevelOfCollection(address,uint8)",
          "setOperatorWhitelistOfCollection(address,uint120)",
          "setPermittedContractReceiverAllowlistOfCollection(address,uint120)",
          "addOperatorToWhitelist(uint120,address)",
          "addPermittedContractReceiverToAllowlist(uint120,address)",
          "removeOperatorFromWhitelist(uint120,address)",
          "removePermittedContractReceiverFromAllowlist(uint120,address)",
          "getCollectionSecurityPolicy(address)",
          "getWhitelistedOperators(uint120)",
          "getPermittedContractReceivers(uint120)",
          "isOperatorWhitelisted(uint120,address)",
          "isContractReceiverPermitted(uint120,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/interfaces/ITransferValidator.sol:ITransferValidator": {
        "src": "@limitbreak/creator-token-contracts/contracts/interfaces/ITransferValidator.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "applyCollectionTransferPolicy(address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:BasicRoyalties": {
        "src": "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:32",
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:BasicRoyaltiesBase",
          "@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BasicRoyalties",
            "src": "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_defaultRoyaltyInfo",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(RoyaltyInfo)3497_storage",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:30"
            },
            {
              "label": "_tokenRoyaltyInfo",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)3497_storage)",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)3497_storage)": {
              "label": "mapping(uint256 => struct ERC2981.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(RoyaltyInfo)3497_storage": {
              "label": "struct ERC2981.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:BasicRoyaltiesBase": {
        "src": "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_defaultRoyaltyInfo",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(RoyaltyInfo)3497_storage",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:30"
            },
            {
              "label": "_tokenRoyaltyInfo",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)3497_storage)",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)3497_storage)": {
              "label": "mapping(uint256 => struct ERC2981.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(RoyaltyInfo)3497_storage": {
              "label": "struct ERC2981.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:BasicRoyaltiesInitializable": {
        "src": "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:43",
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:BasicRoyaltiesBase",
          "@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_defaultRoyaltyInfo",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(RoyaltyInfo)3497_storage",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:30"
            },
            {
              "label": "_tokenRoyaltyInfo",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)3497_storage)",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)3497_storage)": {
              "label": "mapping(uint256 => struct ERC2981.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(RoyaltyInfo)3497_storage": {
              "label": "struct ERC2981.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelin": {
        "src": "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:12",
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelinBase",
          "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155OpenZeppelin",
            "src": "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelinBase": {
        "src": "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:8",
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelinInitializable": {
        "src": "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:16",
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelinBase",
          "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@limitbreak/creator-token-contracts/contracts/access/OwnablePermissions.sol:OwnablePermissions",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "initializeERC1155(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            },
            {
              "label": "_erc1155Initialized",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "ERC1155OpenZeppelinInitializable",
              "src": "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:CreatorTokenBase": {
        "src": "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:33",
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/interfaces/ICreatorToken.sol:ICreatorToken",
          "@limitbreak/creator-token-contracts/contracts/utils/TransferValidation.sol:TransferValidation",
          "@limitbreak/creator-token-contracts/contracts/access/OwnablePermissions.sol:OwnablePermissions",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "setToDefaultSecurityPolicy()",
          "setToCustomValidatorAndSecurityPolicy(address,uint8,uint120,uint120)",
          "setToCustomSecurityPolicy(uint8,uint120,uint120)",
          "setTransferValidator(address)",
          "getTransferValidator()",
          "getSecurityPolicy()",
          "getWhitelistedOperators()",
          "getPermittedContractReceivers()",
          "isOperatorWhitelisted(address)",
          "isContractReceiverPermitted(address)",
          "isTransferAllowed(address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "transferValidator",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ICreatorTokenTransferValidator)321",
              "contract": "CreatorTokenBase",
              "src": "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:42"
            }
          ],
          "types": {
            "t_contract(ICreatorTokenTransferValidator)321": {
              "label": "contract ICreatorTokenTransferValidator",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/utils/TransferValidation.sol:TransferValidation": {
        "src": "@limitbreak/creator-token-contracts/contracts/utils/TransferValidation.sol:13",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/AccessControl.sol:AccessControl": {
        "src": "@openzeppelin/contracts/access/AccessControl.sol:49",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)1500_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)1500_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)1500_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl": {
        "src": "@openzeppelin/contracts/access/IAccessControl.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981": {
        "src": "@openzeppelin/contracts/interfaces/IERC2981.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:20",
        "version": {
          "withMetadata": "98b6a85f8f366a9b763ef82a2d9b6249a191347537fcde7cc4275307dc99bda6",
          "withoutMetadata": "98b6a85f8f366a9b763ef82a2d9b6249a191347537fcde7cc4275307dc99bda6",
          "linkedWithoutMetadata": "98b6a85f8f366a9b763ef82a2d9b6249a191347537fcde7cc4275307dc99bda6"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string)",
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:14",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI": {
        "src": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:14",
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981": {
        "src": "@openzeppelin/contracts/token/common/ERC2981.sol:24",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_defaultRoyaltyInfo",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(RoyaltyInfo)3497_storage",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:30"
            },
            {
              "label": "_tokenRoyaltyInfo",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)3497_storage)",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)3497_storage)": {
              "label": "mapping(uint256 => struct ERC2981.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(RoyaltyInfo)3497_storage": {
              "label": "struct ERC2981.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "88a06e0619fc0272d6778930b606332cf7a479ea47e90a151b436f7ba414357b",
          "withoutMetadata": "88a06e0619fc0272d6778930b606332cf7a479ea47e90a151b436f7ba414357b",
          "linkedWithoutMetadata": "88a06e0619fc0272d6778930b606332cf7a479ea47e90a151b436f7ba414357b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:11",
        "version": {
          "withMetadata": "7c362e654f131db46412f2b294977ec9c15a2450013d8fd3494a0e4efc9273d6",
          "withoutMetadata": "7c362e654f131db46412f2b294977ec9c15a2450013d8fd3494a0e4efc9273d6",
          "linkedWithoutMetadata": "7c362e654f131db46412f2b294977ec9c15a2450013d8fd3494a0e4efc9273d6"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA": {
        "src": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:14",
        "version": {
          "withMetadata": "8aa3ccb02fc44b7f6d5fe57fa1ff2d68670cfc19ae723cb4a6f5e6a371589867",
          "withoutMetadata": "8aa3ccb02fc44b7f6d5fe57fa1ff2d68670cfc19ae723cb4a6f5e6a371589867",
          "linkedWithoutMetadata": "8aa3ccb02fc44b7f6d5fe57fa1ff2d68670cfc19ae723cb4a6f5e6a371589867"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "2b0a51ea28eaa98203f82591b27f917d6aaffcd422cc433c3e8fe727eb017ab5",
          "withoutMetadata": "2b0a51ea28eaa98203f82591b27f917d6aaffcd422cc433c3e8fe727eb017ab5",
          "linkedWithoutMetadata": "2b0a51ea28eaa98203f82591b27f917d6aaffcd422cc433c3e8fe727eb017ab5"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/DYLI.sol:DYLI": {
        "src": "contracts/DYLI.sol:12",
        "version": {
          "withMetadata": "775d173ccc0f239243f943d08a1533577b7870360d49100d9e6cecc9f2cc3bcd",
          "withoutMetadata": "775d173ccc0f239243f943d08a1533577b7870360d49100d9e6cecc9f2cc3bcd",
          "linkedWithoutMetadata": "775d173ccc0f239243f943d08a1533577b7870360d49100d9e6cecc9f2cc3bcd"
        },
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:BasicRoyalties",
          "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:BasicRoyaltiesBase",
          "@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@limitbreak/creator-token-contracts/contracts/erc1155c/ERC1155C.sol:ERC1155C",
          "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:CreatorTokenBase",
          "@limitbreak/creator-token-contracts/contracts/interfaces/ICreatorToken.sol:ICreatorToken",
          "@limitbreak/creator-token-contracts/contracts/utils/TransferValidation.sol:TransferValidation",
          "@limitbreak/creator-token-contracts/contracts/access/OwnablePermissions.sol:OwnablePermissions",
          "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelin",
          "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelinBase",
          "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,address,address,address,uint96)",
          "name()",
          "symbol()",
          "setURI(string)",
          "setFeeRecipient(address)",
          "setFee(uint256)",
          "setCreateFee(uint256)",
          "setSigner(address)",
          "createDrop(uint256,uint256,bool,bool,bytes,uint256,uint256,uint256,uint256)",
          "mintToken(uint256,bytes,uint256,bool)",
          "batchRedeem(uint256[],uint256,bool,uint256[],bytes)",
          "refundToken(uint256,uint256,bytes,uint256)",
          "disableToken(uint256,bool)",
          "setAdmin(address,bool)",
          "setMarketplace(address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "updateClaimableTokens(uint256)",
          "reserveSafeWithdraw()",
          "fullWithdraw()",
          "setReservedTokens(uint256)",
          "uri(uint256)",
          "supportsInterface(bytes4)",
          "ownerMintToken(uint256,address,uint256)",
          "ownerRedeem(uint256,address,uint256)",
          "ownerRefund(uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DYLI",
            "src": "contracts/DYLI.sol:76"
          },
          {
            "kind": "state-variable-assignment",
            "name": "usdc",
            "src": "contracts/DYLI.sol:14"
          },
          {
            "kind": "state-variable-assignment",
            "name": "currentTokenId",
            "src": "contracts/DYLI.sol:40"
          },
          {
            "kind": "state-variable-assignment",
            "name": "feeRecipient",
            "src": "contracts/DYLI.sol:42"
          },
          {
            "kind": "state-variable-assignment",
            "name": "signerAddress",
            "src": "contracts/DYLI.sol:43"
          },
          {
            "kind": "state-variable-assignment",
            "name": "fee",
            "src": "contracts/DYLI.sol:44"
          },
          {
            "kind": "state-variable-assignment",
            "name": "createFee",
            "src": "contracts/DYLI.sol:45"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservedTokens",
            "src": "contracts/DYLI.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            },
            {
              "label": "transferValidator",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ICreatorTokenTransferValidator)321",
              "contract": "CreatorTokenBase",
              "src": "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:42"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_defaultRoyaltyInfo",
              "offset": 0,
              "slot": "5",
              "type": "t_struct(RoyaltyInfo)3497_storage",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:30"
            },
            {
              "label": "_tokenRoyaltyInfo",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)3497_storage)",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:31"
            },
            {
              "label": "usdc",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(IERC20)3483",
              "contract": "DYLI",
              "src": "contracts/DYLI.sol:14"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "DYLI",
              "src": "contracts/DYLI.sol:28"
            },
            {
              "label": "tokenData",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_struct(TokenData)5653_storage)",
              "contract": "DYLI",
              "src": "contracts/DYLI.sol:30"
            },
            {
              "label": "tokenDisabled",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "DYLI",
              "src": "contracts/DYLI.sol:31"
            },
            {
              "label": "totalMinted",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "DYLI",
              "src": "contracts/DYLI.sol:33"
            },
            {
              "label": "totalRefunded",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "DYLI",
              "src": "contracts/DYLI.sol:34"
            },
            {
              "label": "totalRedeemed",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "DYLI",
              "src": "contracts/DYLI.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "DYLI",
              "src": "contracts/DYLI.sol:37"
            },
            {
              "label": "nonceUsed",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "DYLI",
              "src": "contracts/DYLI.sol:38"
            },
            {
              "label": "currentTokenId",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "DYLI",
              "src": "contracts/DYLI.sol:40"
            },
            {
              "label": "feeRecipient",
              "offset": 0,
              "slot": "17",
              "type": "t_address",
              "contract": "DYLI",
              "src": "contracts/DYLI.sol:42"
            },
            {
              "label": "signerAddress",
              "offset": 0,
              "slot": "18",
              "type": "t_address",
              "contract": "DYLI",
              "src": "contracts/DYLI.sol:43"
            },
            {
              "label": "fee",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "DYLI",
              "src": "contracts/DYLI.sol:44"
            },
            {
              "label": "createFee",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "DYLI",
              "src": "contracts/DYLI.sol:45"
            },
            {
              "label": "marketplace",
              "offset": 0,
              "slot": "21",
              "type": "t_address",
              "contract": "DYLI",
              "src": "contracts/DYLI.sol:47"
            },
            {
              "label": "BASE_URI",
              "offset": 0,
              "slot": "22",
              "type": "t_string_storage",
              "contract": "DYLI",
              "src": "contracts/DYLI.sol:48"
            },
            {
              "label": "reservedTokens",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "DYLI",
              "src": "contracts/DYLI.sol:50"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ICreatorTokenTransferValidator)321": {
              "label": "contract ICreatorTokenTransferValidator",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)3483": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
              "label": "mapping(address => mapping(uint256 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)3497_storage)": {
              "label": "mapping(uint256 => struct ERC2981.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenData)5653_storage)": {
              "label": "mapping(uint256 => struct DYLI.TokenData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RoyaltyInfo)3497_storage": {
              "label": "struct ERC2981.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(TokenData)5653_storage": {
              "label": "struct DYLI.TokenData",
              "members": [
                {
                  "label": "maxMint",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "startTimestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "minMint",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "tokensReserved",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "creator",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "reserveFreed",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "6"
                },
                {
                  "label": "isOE",
                  "type": "t_bool",
                  "offset": 21,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@limitbreak/creator-token-contracts/contracts/access/OwnablePermissions.sol:OwnablePermissions": {
        "src": "@limitbreak/creator-token-contracts/contracts/access/OwnablePermissions.sol:6",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/erc1155c/ERC1155C.sol:ERC1155C": {
        "src": "@limitbreak/creator-token-contracts/contracts/erc1155c/ERC1155C.sol:14",
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:CreatorTokenBase",
          "@limitbreak/creator-token-contracts/contracts/interfaces/ICreatorToken.sol:ICreatorToken",
          "@limitbreak/creator-token-contracts/contracts/utils/TransferValidation.sol:TransferValidation",
          "@limitbreak/creator-token-contracts/contracts/access/OwnablePermissions.sol:OwnablePermissions",
          "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelin",
          "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelinBase",
          "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            },
            {
              "label": "transferValidator",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ICreatorTokenTransferValidator)321",
              "contract": "CreatorTokenBase",
              "src": "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ICreatorTokenTransferValidator)321": {
              "label": "contract ICreatorTokenTransferValidator",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/erc1155c/ERC1155C.sol:ERC1155CInitializable": {
        "src": "@limitbreak/creator-token-contracts/contracts/erc1155c/ERC1155C.sol:64",
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:CreatorTokenBase",
          "@limitbreak/creator-token-contracts/contracts/interfaces/ICreatorToken.sol:ICreatorToken",
          "@limitbreak/creator-token-contracts/contracts/utils/TransferValidation.sol:TransferValidation",
          "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelinInitializable",
          "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelinBase",
          "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@limitbreak/creator-token-contracts/contracts/access/OwnablePermissions.sol:OwnablePermissions",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            },
            {
              "label": "_erc1155Initialized",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "ERC1155OpenZeppelinInitializable",
              "src": "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:20"
            },
            {
              "label": "transferValidator",
              "offset": 1,
              "slot": "3",
              "type": "t_contract(ICreatorTokenTransferValidator)321",
              "contract": "CreatorTokenBase",
              "src": "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ICreatorTokenTransferValidator)321": {
              "label": "contract ICreatorTokenTransferValidator",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/interfaces/ICreatorToken.sol:ICreatorToken": {
        "src": "@limitbreak/creator-token-contracts/contracts/interfaces/ICreatorToken.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getTransferValidator()",
          "getSecurityPolicy()",
          "getWhitelistedOperators()",
          "getPermittedContractReceivers()",
          "isOperatorWhitelisted(address)",
          "isContractReceiverPermitted(address)",
          "isTransferAllowed(address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/interfaces/ICreatorTokenTransferValidator.sol:ICreatorTokenTransferValidator": {
        "src": "@limitbreak/creator-token-contracts/contracts/interfaces/ICreatorTokenTransferValidator.sol:8",
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/interfaces/IEOARegistry.sol:IEOARegistry",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@limitbreak/creator-token-contracts/contracts/interfaces/ITransferValidator.sol:ITransferValidator",
          "@limitbreak/creator-token-contracts/contracts/interfaces/ITransferSecurityRegistry.sol:ITransferSecurityRegistry"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/interfaces/IEOARegistry.sol:IEOARegistry": {
        "src": "@limitbreak/creator-token-contracts/contracts/interfaces/IEOARegistry.sol:6",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "isVerifiedEOA(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/interfaces/ITransferSecurityRegistry.sol:ITransferSecurityRegistry": {
        "src": "@limitbreak/creator-token-contracts/contracts/interfaces/ITransferSecurityRegistry.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createOperatorWhitelist(string)",
          "createPermittedContractReceiverAllowlist(string)",
          "reassignOwnershipOfOperatorWhitelist(uint120,address)",
          "reassignOwnershipOfPermittedContractReceiverAllowlist(uint120,address)",
          "renounceOwnershipOfOperatorWhitelist(uint120)",
          "renounceOwnershipOfPermittedContractReceiverAllowlist(uint120)",
          "setTransferSecurityLevelOfCollection(address,uint8)",
          "setOperatorWhitelistOfCollection(address,uint120)",
          "setPermittedContractReceiverAllowlistOfCollection(address,uint120)",
          "addOperatorToWhitelist(uint120,address)",
          "addPermittedContractReceiverToAllowlist(uint120,address)",
          "removeOperatorFromWhitelist(uint120,address)",
          "removePermittedContractReceiverFromAllowlist(uint120,address)",
          "getCollectionSecurityPolicy(address)",
          "getWhitelistedOperators(uint120)",
          "getPermittedContractReceivers(uint120)",
          "isOperatorWhitelisted(uint120,address)",
          "isContractReceiverPermitted(uint120,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/interfaces/ITransferValidator.sol:ITransferValidator": {
        "src": "@limitbreak/creator-token-contracts/contracts/interfaces/ITransferValidator.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "applyCollectionTransferPolicy(address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:BasicRoyalties": {
        "src": "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:32",
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:BasicRoyaltiesBase",
          "@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BasicRoyalties",
            "src": "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_defaultRoyaltyInfo",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(RoyaltyInfo)3497_storage",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:30"
            },
            {
              "label": "_tokenRoyaltyInfo",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)3497_storage)",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)3497_storage)": {
              "label": "mapping(uint256 => struct ERC2981.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(RoyaltyInfo)3497_storage": {
              "label": "struct ERC2981.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:BasicRoyaltiesBase": {
        "src": "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_defaultRoyaltyInfo",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(RoyaltyInfo)3497_storage",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:30"
            },
            {
              "label": "_tokenRoyaltyInfo",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)3497_storage)",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)3497_storage)": {
              "label": "mapping(uint256 => struct ERC2981.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(RoyaltyInfo)3497_storage": {
              "label": "struct ERC2981.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:BasicRoyaltiesInitializable": {
        "src": "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:43",
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:BasicRoyaltiesBase",
          "@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_defaultRoyaltyInfo",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(RoyaltyInfo)3497_storage",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:30"
            },
            {
              "label": "_tokenRoyaltyInfo",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)3497_storage)",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)3497_storage)": {
              "label": "mapping(uint256 => struct ERC2981.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(RoyaltyInfo)3497_storage": {
              "label": "struct ERC2981.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelin": {
        "src": "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:12",
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelinBase",
          "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155OpenZeppelin",
            "src": "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelinBase": {
        "src": "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:8",
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelinInitializable": {
        "src": "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:16",
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelinBase",
          "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@limitbreak/creator-token-contracts/contracts/access/OwnablePermissions.sol:OwnablePermissions",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "initializeERC1155(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            },
            {
              "label": "_erc1155Initialized",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "ERC1155OpenZeppelinInitializable",
              "src": "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:CreatorTokenBase": {
        "src": "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:33",
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/interfaces/ICreatorToken.sol:ICreatorToken",
          "@limitbreak/creator-token-contracts/contracts/utils/TransferValidation.sol:TransferValidation",
          "@limitbreak/creator-token-contracts/contracts/access/OwnablePermissions.sol:OwnablePermissions",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "setToDefaultSecurityPolicy()",
          "setToCustomValidatorAndSecurityPolicy(address,uint8,uint120,uint120)",
          "setToCustomSecurityPolicy(uint8,uint120,uint120)",
          "setTransferValidator(address)",
          "getTransferValidator()",
          "getSecurityPolicy()",
          "getWhitelistedOperators()",
          "getPermittedContractReceivers()",
          "isOperatorWhitelisted(address)",
          "isContractReceiverPermitted(address)",
          "isTransferAllowed(address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "transferValidator",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ICreatorTokenTransferValidator)321",
              "contract": "CreatorTokenBase",
              "src": "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:42"
            }
          ],
          "types": {
            "t_contract(ICreatorTokenTransferValidator)321": {
              "label": "contract ICreatorTokenTransferValidator",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/utils/TransferValidation.sol:TransferValidation": {
        "src": "@limitbreak/creator-token-contracts/contracts/utils/TransferValidation.sol:13",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/AccessControl.sol:AccessControl": {
        "src": "@openzeppelin/contracts/access/AccessControl.sol:49",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)1500_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)1500_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)1500_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl": {
        "src": "@openzeppelin/contracts/access/IAccessControl.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981": {
        "src": "@openzeppelin/contracts/interfaces/IERC2981.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:20",
        "version": {
          "withMetadata": "98b6a85f8f366a9b763ef82a2d9b6249a191347537fcde7cc4275307dc99bda6",
          "withoutMetadata": "98b6a85f8f366a9b763ef82a2d9b6249a191347537fcde7cc4275307dc99bda6",
          "linkedWithoutMetadata": "98b6a85f8f366a9b763ef82a2d9b6249a191347537fcde7cc4275307dc99bda6"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string)",
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:14",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI": {
        "src": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:14",
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981": {
        "src": "@openzeppelin/contracts/token/common/ERC2981.sol:24",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_defaultRoyaltyInfo",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(RoyaltyInfo)3497_storage",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:30"
            },
            {
              "label": "_tokenRoyaltyInfo",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)3497_storage)",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)3497_storage)": {
              "label": "mapping(uint256 => struct ERC2981.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(RoyaltyInfo)3497_storage": {
              "label": "struct ERC2981.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "88a06e0619fc0272d6778930b606332cf7a479ea47e90a151b436f7ba414357b",
          "withoutMetadata": "88a06e0619fc0272d6778930b606332cf7a479ea47e90a151b436f7ba414357b",
          "linkedWithoutMetadata": "88a06e0619fc0272d6778930b606332cf7a479ea47e90a151b436f7ba414357b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:11",
        "version": {
          "withMetadata": "7c362e654f131db46412f2b294977ec9c15a2450013d8fd3494a0e4efc9273d6",
          "withoutMetadata": "7c362e654f131db46412f2b294977ec9c15a2450013d8fd3494a0e4efc9273d6",
          "linkedWithoutMetadata": "7c362e654f131db46412f2b294977ec9c15a2450013d8fd3494a0e4efc9273d6"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA": {
        "src": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:14",
        "version": {
          "withMetadata": "8aa3ccb02fc44b7f6d5fe57fa1ff2d68670cfc19ae723cb4a6f5e6a371589867",
          "withoutMetadata": "8aa3ccb02fc44b7f6d5fe57fa1ff2d68670cfc19ae723cb4a6f5e6a371589867",
          "linkedWithoutMetadata": "8aa3ccb02fc44b7f6d5fe57fa1ff2d68670cfc19ae723cb4a6f5e6a371589867"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "2b0a51ea28eaa98203f82591b27f917d6aaffcd422cc433c3e8fe727eb017ab5",
          "withoutMetadata": "2b0a51ea28eaa98203f82591b27f917d6aaffcd422cc433c3e8fe727eb017ab5",
          "linkedWithoutMetadata": "2b0a51ea28eaa98203f82591b27f917d6aaffcd422cc433c3e8fe727eb017ab5"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/DYLI_new.sol:DYLI_new": {
        "src": "contracts/DYLI_new.sol:12",
        "version": {
          "withMetadata": "61a7351ad10165cec9d9f6bfbc1cf7c9f7e4f4a8d0f6adc8aa443fde12c0dc3c",
          "withoutMetadata": "61a7351ad10165cec9d9f6bfbc1cf7c9f7e4f4a8d0f6adc8aa443fde12c0dc3c",
          "linkedWithoutMetadata": "61a7351ad10165cec9d9f6bfbc1cf7c9f7e4f4a8d0f6adc8aa443fde12c0dc3c"
        },
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:BasicRoyalties",
          "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:BasicRoyaltiesBase",
          "@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@limitbreak/creator-token-contracts/contracts/erc1155c/ERC1155C.sol:ERC1155C",
          "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:CreatorTokenBase",
          "@limitbreak/creator-token-contracts/contracts/interfaces/ICreatorToken.sol:ICreatorToken",
          "@limitbreak/creator-token-contracts/contracts/utils/TransferValidation.sol:TransferValidation",
          "@limitbreak/creator-token-contracts/contracts/access/OwnablePermissions.sol:OwnablePermissions",
          "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelin",
          "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelinBase",
          "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,address,address,address,uint96)",
          "name()",
          "symbol()",
          "setURI(string)",
          "setFeeRecipient(address)",
          "setFee(uint256)",
          "setCreateFee(uint256)",
          "setSigner(address)",
          "createDrop(uint256,uint256,bool,bool,bytes,uint256,uint256,uint256,uint256)",
          "mintToken(uint256,bytes,uint256,bool)",
          "batchRedeem(uint256[],uint256,bool,uint256[],bytes)",
          "refundToken(uint256,uint256,bytes,uint256)",
          "disableToken(uint256,bool)",
          "setAdmin(address,bool)",
          "setMarketplace(address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "updateClaimableTokens(uint256)",
          "reserveSafeWithdraw()",
          "fullWithdraw()",
          "setReservedTokens(uint256)",
          "uri(uint256)",
          "supportsInterface(bytes4)",
          "ownerMintToken(uint256,address,uint256)",
          "ownerRedeem(uint256,address,uint256)",
          "ownerRefund(uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DYLI_new",
            "src": "contracts/DYLI_new.sol:76"
          },
          {
            "kind": "state-variable-assignment",
            "name": "usdc",
            "src": "contracts/DYLI_new.sol:14"
          },
          {
            "kind": "state-variable-assignment",
            "name": "currentTokenId",
            "src": "contracts/DYLI_new.sol:40"
          },
          {
            "kind": "state-variable-assignment",
            "name": "feeRecipient",
            "src": "contracts/DYLI_new.sol:42"
          },
          {
            "kind": "state-variable-assignment",
            "name": "signerAddress",
            "src": "contracts/DYLI_new.sol:43"
          },
          {
            "kind": "state-variable-assignment",
            "name": "fee",
            "src": "contracts/DYLI_new.sol:44"
          },
          {
            "kind": "state-variable-assignment",
            "name": "createFee",
            "src": "contracts/DYLI_new.sol:45"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservedTokens",
            "src": "contracts/DYLI_new.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            },
            {
              "label": "transferValidator",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ICreatorTokenTransferValidator)321",
              "contract": "CreatorTokenBase",
              "src": "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:42"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_defaultRoyaltyInfo",
              "offset": 0,
              "slot": "5",
              "type": "t_struct(RoyaltyInfo)3497_storage",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:30"
            },
            {
              "label": "_tokenRoyaltyInfo",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)3497_storage)",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:31"
            },
            {
              "label": "usdc",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(IERC20)3483",
              "contract": "DYLI_new",
              "src": "contracts/DYLI_new.sol:14"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "DYLI_new",
              "src": "contracts/DYLI_new.sol:28"
            },
            {
              "label": "tokenData",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_struct(TokenData)5653_storage)",
              "contract": "DYLI_new",
              "src": "contracts/DYLI_new.sol:30"
            },
            {
              "label": "tokenDisabled",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "DYLI_new",
              "src": "contracts/DYLI_new.sol:31"
            },
            {
              "label": "totalMinted",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "DYLI_new",
              "src": "contracts/DYLI_new.sol:33"
            },
            {
              "label": "totalRefunded",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "DYLI_new",
              "src": "contracts/DYLI_new.sol:34"
            },
            {
              "label": "totalRedeemed",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "DYLI_new",
              "src": "contracts/DYLI_new.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "DYLI_new",
              "src": "contracts/DYLI_new.sol:37"
            },
            {
              "label": "nonceUsed",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "DYLI_new",
              "src": "contracts/DYLI_new.sol:38"
            },
            {
              "label": "currentTokenId",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "DYLI_new",
              "src": "contracts/DYLI_new.sol:40"
            },
            {
              "label": "feeRecipient",
              "offset": 0,
              "slot": "17",
              "type": "t_address",
              "contract": "DYLI_new",
              "src": "contracts/DYLI_new.sol:42"
            },
            {
              "label": "signerAddress",
              "offset": 0,
              "slot": "18",
              "type": "t_address",
              "contract": "DYLI_new",
              "src": "contracts/DYLI_new.sol:43"
            },
            {
              "label": "fee",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "DYLI_new",
              "src": "contracts/DYLI_new.sol:44"
            },
            {
              "label": "createFee",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "DYLI_new",
              "src": "contracts/DYLI_new.sol:45"
            },
            {
              "label": "marketplace",
              "offset": 0,
              "slot": "21",
              "type": "t_address",
              "contract": "DYLI_new",
              "src": "contracts/DYLI_new.sol:47"
            },
            {
              "label": "BASE_URI",
              "offset": 0,
              "slot": "22",
              "type": "t_string_storage",
              "contract": "DYLI_new",
              "src": "contracts/DYLI_new.sol:48"
            },
            {
              "label": "reservedTokens",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "DYLI_new",
              "src": "contracts/DYLI_new.sol:50"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ICreatorTokenTransferValidator)321": {
              "label": "contract ICreatorTokenTransferValidator",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)3483": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
              "label": "mapping(address => mapping(uint256 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)3497_storage)": {
              "label": "mapping(uint256 => struct ERC2981.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenData)5653_storage)": {
              "label": "mapping(uint256 => struct DYLI_new.TokenData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RoyaltyInfo)3497_storage": {
              "label": "struct ERC2981.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(TokenData)5653_storage": {
              "label": "struct DYLI_new.TokenData",
              "members": [
                {
                  "label": "maxMint",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "startTimestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "minMint",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "tokensReserved",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "creator",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "reserveFreed",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "6"
                },
                {
                  "label": "isOE",
                  "type": "t_bool",
                  "offset": 21,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@limitbreak/creator-token-contracts/contracts/access/OwnablePermissions.sol:OwnablePermissions": {
        "src": "@limitbreak/creator-token-contracts/contracts/access/OwnablePermissions.sol:6",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/erc1155c/ERC1155C.sol:ERC1155C": {
        "src": "@limitbreak/creator-token-contracts/contracts/erc1155c/ERC1155C.sol:14",
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:CreatorTokenBase",
          "@limitbreak/creator-token-contracts/contracts/interfaces/ICreatorToken.sol:ICreatorToken",
          "@limitbreak/creator-token-contracts/contracts/utils/TransferValidation.sol:TransferValidation",
          "@limitbreak/creator-token-contracts/contracts/access/OwnablePermissions.sol:OwnablePermissions",
          "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelin",
          "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelinBase",
          "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            },
            {
              "label": "transferValidator",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ICreatorTokenTransferValidator)321",
              "contract": "CreatorTokenBase",
              "src": "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ICreatorTokenTransferValidator)321": {
              "label": "contract ICreatorTokenTransferValidator",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/erc1155c/ERC1155C.sol:ERC1155CInitializable": {
        "src": "@limitbreak/creator-token-contracts/contracts/erc1155c/ERC1155C.sol:64",
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:CreatorTokenBase",
          "@limitbreak/creator-token-contracts/contracts/interfaces/ICreatorToken.sol:ICreatorToken",
          "@limitbreak/creator-token-contracts/contracts/utils/TransferValidation.sol:TransferValidation",
          "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelinInitializable",
          "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelinBase",
          "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@limitbreak/creator-token-contracts/contracts/access/OwnablePermissions.sol:OwnablePermissions",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            },
            {
              "label": "_erc1155Initialized",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "ERC1155OpenZeppelinInitializable",
              "src": "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:20"
            },
            {
              "label": "transferValidator",
              "offset": 1,
              "slot": "3",
              "type": "t_contract(ICreatorTokenTransferValidator)321",
              "contract": "CreatorTokenBase",
              "src": "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ICreatorTokenTransferValidator)321": {
              "label": "contract ICreatorTokenTransferValidator",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/interfaces/ICreatorToken.sol:ICreatorToken": {
        "src": "@limitbreak/creator-token-contracts/contracts/interfaces/ICreatorToken.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getTransferValidator()",
          "getSecurityPolicy()",
          "getWhitelistedOperators()",
          "getPermittedContractReceivers()",
          "isOperatorWhitelisted(address)",
          "isContractReceiverPermitted(address)",
          "isTransferAllowed(address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/interfaces/ICreatorTokenTransferValidator.sol:ICreatorTokenTransferValidator": {
        "src": "@limitbreak/creator-token-contracts/contracts/interfaces/ICreatorTokenTransferValidator.sol:8",
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/interfaces/IEOARegistry.sol:IEOARegistry",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@limitbreak/creator-token-contracts/contracts/interfaces/ITransferValidator.sol:ITransferValidator",
          "@limitbreak/creator-token-contracts/contracts/interfaces/ITransferSecurityRegistry.sol:ITransferSecurityRegistry"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/interfaces/IEOARegistry.sol:IEOARegistry": {
        "src": "@limitbreak/creator-token-contracts/contracts/interfaces/IEOARegistry.sol:6",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "isVerifiedEOA(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/interfaces/ITransferSecurityRegistry.sol:ITransferSecurityRegistry": {
        "src": "@limitbreak/creator-token-contracts/contracts/interfaces/ITransferSecurityRegistry.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createOperatorWhitelist(string)",
          "createPermittedContractReceiverAllowlist(string)",
          "reassignOwnershipOfOperatorWhitelist(uint120,address)",
          "reassignOwnershipOfPermittedContractReceiverAllowlist(uint120,address)",
          "renounceOwnershipOfOperatorWhitelist(uint120)",
          "renounceOwnershipOfPermittedContractReceiverAllowlist(uint120)",
          "setTransferSecurityLevelOfCollection(address,uint8)",
          "setOperatorWhitelistOfCollection(address,uint120)",
          "setPermittedContractReceiverAllowlistOfCollection(address,uint120)",
          "addOperatorToWhitelist(uint120,address)",
          "addPermittedContractReceiverToAllowlist(uint120,address)",
          "removeOperatorFromWhitelist(uint120,address)",
          "removePermittedContractReceiverFromAllowlist(uint120,address)",
          "getCollectionSecurityPolicy(address)",
          "getWhitelistedOperators(uint120)",
          "getPermittedContractReceivers(uint120)",
          "isOperatorWhitelisted(uint120,address)",
          "isContractReceiverPermitted(uint120,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/interfaces/ITransferValidator.sol:ITransferValidator": {
        "src": "@limitbreak/creator-token-contracts/contracts/interfaces/ITransferValidator.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "applyCollectionTransferPolicy(address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:BasicRoyalties": {
        "src": "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:32",
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:BasicRoyaltiesBase",
          "@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BasicRoyalties",
            "src": "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_defaultRoyaltyInfo",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(RoyaltyInfo)5015_storage",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:30"
            },
            {
              "label": "_tokenRoyaltyInfo",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)5015_storage)",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)5015_storage)": {
              "label": "mapping(uint256 => struct ERC2981.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(RoyaltyInfo)5015_storage": {
              "label": "struct ERC2981.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:BasicRoyaltiesBase": {
        "src": "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_defaultRoyaltyInfo",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(RoyaltyInfo)5015_storage",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:30"
            },
            {
              "label": "_tokenRoyaltyInfo",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)5015_storage)",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)5015_storage)": {
              "label": "mapping(uint256 => struct ERC2981.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(RoyaltyInfo)5015_storage": {
              "label": "struct ERC2981.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:BasicRoyaltiesInitializable": {
        "src": "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:43",
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:BasicRoyaltiesBase",
          "@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_defaultRoyaltyInfo",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(RoyaltyInfo)5015_storage",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:30"
            },
            {
              "label": "_tokenRoyaltyInfo",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)5015_storage)",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)5015_storage)": {
              "label": "mapping(uint256 => struct ERC2981.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(RoyaltyInfo)5015_storage": {
              "label": "struct ERC2981.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelin": {
        "src": "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:12",
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelinBase",
          "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155OpenZeppelin",
            "src": "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelinBase": {
        "src": "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:8",
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelinInitializable": {
        "src": "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:16",
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelinBase",
          "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@limitbreak/creator-token-contracts/contracts/access/OwnablePermissions.sol:OwnablePermissions",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "initializeERC1155(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            },
            {
              "label": "_erc1155Initialized",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "ERC1155OpenZeppelinInitializable",
              "src": "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:CreatorTokenBase": {
        "src": "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:33",
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/interfaces/ICreatorToken.sol:ICreatorToken",
          "@limitbreak/creator-token-contracts/contracts/utils/TransferValidation.sol:TransferValidation",
          "@limitbreak/creator-token-contracts/contracts/access/OwnablePermissions.sol:OwnablePermissions",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "setToDefaultSecurityPolicy()",
          "setToCustomValidatorAndSecurityPolicy(address,uint8,uint120,uint120)",
          "setToCustomSecurityPolicy(uint8,uint120,uint120)",
          "setTransferValidator(address)",
          "getTransferValidator()",
          "getSecurityPolicy()",
          "getWhitelistedOperators()",
          "getPermittedContractReceivers()",
          "isOperatorWhitelisted(address)",
          "isContractReceiverPermitted(address)",
          "isTransferAllowed(address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "transferValidator",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ICreatorTokenTransferValidator)321",
              "contract": "CreatorTokenBase",
              "src": "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:42"
            }
          ],
          "types": {
            "t_contract(ICreatorTokenTransferValidator)321": {
              "label": "contract ICreatorTokenTransferValidator",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/utils/TransferValidation.sol:TransferValidation": {
        "src": "@limitbreak/creator-token-contracts/contracts/utils/TransferValidation.sol:13",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/AccessControl.sol:AccessControl": {
        "src": "@openzeppelin/contracts/access/AccessControl.sol:49",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)1500_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)1500_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)1500_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl": {
        "src": "@openzeppelin/contracts/access/IAccessControl.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981": {
        "src": "@openzeppelin/contracts/interfaces/IERC2981.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:15",
        "version": {
          "withMetadata": "8b75ad3c9c27832f34858bab035a4b4132e80e18429db1c7459065123c5318ae",
          "withoutMetadata": "8b75ad3c9c27832f34858bab035a4b4132e80e18429db1c7459065123c5318ae",
          "linkedWithoutMetadata": "8b75ad3c9c27832f34858bab035a4b4132e80e18429db1c7459065123c5318ae"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:22"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:19",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/proxy/Proxy.sol:Proxy": {
        "src": "@openzeppelin/contracts/proxy/Proxy.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:BeaconProxy": {
        "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:18",
        "version": {
          "withMetadata": "654b6293ebc01560ec815be8b48129be8e7546fffb1e0df511fd56982ba8331c",
          "withoutMetadata": "654b6293ebc01560ec815be8b48129be8e7546fffb1e0df511fd56982ba8331c",
          "linkedWithoutMetadata": "654b6293ebc01560ec815be8b48129be8e7546fffb1e0df511fd56982ba8331c"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:30"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:UpgradeableBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:16",
        "version": {
          "withMetadata": "b0587c909fda3b948bc100488bd4f9f4f14788cff166936b71d2090758e999ed",
          "withoutMetadata": "b0587c909fda3b948bc100488bd4f9f4f14788cff166936b71d2090758e999ed",
          "linkedWithoutMetadata": "b0587c909fda3b948bc100488bd4f9f4f14788cff166936b71d2090758e999ed"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "implementation()",
          "upgradeTo(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_implementation",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UpgradeableBeacon",
              "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol:ProxyAdmin": {
        "src": "@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol:13",
        "version": {
          "withMetadata": "abfad86ce6e5fc77073b07986731da62d412c5c211acb5d4d45ae8485c55c8a1",
          "withoutMetadata": "abfad86ce6e5fc77073b07986731da62d412c5c211acb5d4d45ae8485c55c8a1",
          "linkedWithoutMetadata": "abfad86ce6e5fc77073b07986731da62d412c5c211acb5d4d45ae8485c55c8a1"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "getProxyImplementation(address)",
          "getProxyAdmin(address)",
          "changeProxyAdmin(address,address)",
          "upgrade(address,address)",
          "upgradeAndCall(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:TransparentUpgradeableProxy": {
        "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:29",
        "version": {
          "withMetadata": "fed30d15e4dea83a738eca08cbdd6c4e37ff8826dbb9835f02d1354a647fb612",
          "withoutMetadata": "fed30d15e4dea83a738eca08cbdd6c4e37ff8826dbb9835f02d1354a647fb612",
          "linkedWithoutMetadata": "fed30d15e4dea83a738eca08cbdd6c4e37ff8826dbb9835f02d1354a647fb612"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy",
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)",
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:34"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:20",
        "version": {
          "withMetadata": "98b6a85f8f366a9b763ef82a2d9b6249a191347537fcde7cc4275307dc99bda6",
          "withoutMetadata": "98b6a85f8f366a9b763ef82a2d9b6249a191347537fcde7cc4275307dc99bda6",
          "linkedWithoutMetadata": "98b6a85f8f366a9b763ef82a2d9b6249a191347537fcde7cc4275307dc99bda6"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string)",
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:14",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI": {
        "src": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:14",
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "1f0032315e50a02988ce107335f22b6a04fd6d95be570e1da8852d443d4c142a",
          "withoutMetadata": "1f0032315e50a02988ce107335f22b6a04fd6d95be570e1da8852d443d4c142a",
          "linkedWithoutMetadata": "1f0032315e50a02988ce107335f22b6a04fd6d95be570e1da8852d443d4c142a"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981": {
        "src": "@openzeppelin/contracts/token/common/ERC2981.sol:24",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_defaultRoyaltyInfo",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(RoyaltyInfo)5015_storage",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:30"
            },
            {
              "label": "_tokenRoyaltyInfo",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)5015_storage)",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)5015_storage)": {
              "label": "mapping(uint256 => struct ERC2981.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(RoyaltyInfo)5015_storage": {
              "label": "struct ERC2981.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "88a06e0619fc0272d6778930b606332cf7a479ea47e90a151b436f7ba414357b",
          "withoutMetadata": "88a06e0619fc0272d6778930b606332cf7a479ea47e90a151b436f7ba414357b",
          "linkedWithoutMetadata": "88a06e0619fc0272d6778930b606332cf7a479ea47e90a151b436f7ba414357b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:32",
        "version": {
          "withMetadata": "3a60c60d871bdb5572878e78528ab39c3813661f870b13657f1cbc61465f72c1",
          "withoutMetadata": "3a60c60d871bdb5572878e78528ab39c3813661f870b13657f1cbc61465f72c1",
          "linkedWithoutMetadata": "3a60c60d871bdb5572878e78528ab39c3813661f870b13657f1cbc61465f72c1"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:11",
        "version": {
          "withMetadata": "7c362e654f131db46412f2b294977ec9c15a2450013d8fd3494a0e4efc9273d6",
          "withoutMetadata": "7c362e654f131db46412f2b294977ec9c15a2450013d8fd3494a0e4efc9273d6",
          "linkedWithoutMetadata": "7c362e654f131db46412f2b294977ec9c15a2450013d8fd3494a0e4efc9273d6"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA": {
        "src": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:14",
        "version": {
          "withMetadata": "8aa3ccb02fc44b7f6d5fe57fa1ff2d68670cfc19ae723cb4a6f5e6a371589867",
          "withoutMetadata": "8aa3ccb02fc44b7f6d5fe57fa1ff2d68670cfc19ae723cb4a6f5e6a371589867",
          "linkedWithoutMetadata": "8aa3ccb02fc44b7f6d5fe57fa1ff2d68670cfc19ae723cb4a6f5e6a371589867"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "2b0a51ea28eaa98203f82591b27f917d6aaffcd422cc433c3e8fe727eb017ab5",
          "withoutMetadata": "2b0a51ea28eaa98203f82591b27f917d6aaffcd422cc433c3e8fe727eb017ab5",
          "linkedWithoutMetadata": "2b0a51ea28eaa98203f82591b27f917d6aaffcd422cc433c3e8fe727eb017ab5"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/DYLIMarketplace.sol:DYLIMarketplace": {
        "src": "contracts/DYLIMarketplace.sol:9",
        "version": {
          "withMetadata": "f2be5eaca5bd5c6d26ccf2a2ad0ba8db786bc00d0b3576a970b58aae2b190f73",
          "withoutMetadata": "f2be5eaca5bd5c6d26ccf2a2ad0ba8db786bc00d0b3576a970b58aae2b190f73",
          "linkedWithoutMetadata": "f2be5eaca5bd5c6d26ccf2a2ad0ba8db786bc00d0b3576a970b58aae2b190f73"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "setUSDCContract(address)",
          "setERC1155Contract(address)",
          "createListing(uint256,uint128,uint64,uint64)",
          "editListing(uint256,uint128,uint64)",
          "cancelListing(uint256)",
          "buyListing(uint256,address,uint64,uint128)",
          "createBid(uint256,uint64,uint64,uint128)",
          "editBid(uint256,uint64,uint64)",
          "cancelBid(uint256)",
          "acceptBid(uint256,address)",
          "setRoyaltyRecipient(address)",
          "setRoyaltyPercentage(uint256)",
          "setTokenRoyalty(uint256,uint256)",
          "setFixedFee(uint256)",
          "withdrawUSDC(uint256)",
          "withdrawETH(uint256)",
          "getBid(uint256)",
          "getListing(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "usdc",
            "src": "contracts/DYLIMarketplace.sol:10"
          },
          {
            "kind": "state-variable-assignment",
            "name": "erc1155",
            "src": "contracts/DYLIMarketplace.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "royaltyPercentage",
            "src": "contracts/DYLIMarketplace.sol:13"
          },
          {
            "kind": "state-variable-assignment",
            "name": "royaltyRecipient",
            "src": "contracts/DYLIMarketplace.sol:14"
          },
          {
            "kind": "state-variable-assignment",
            "name": "fixedFee",
            "src": "contracts/DYLIMarketplace.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "listingCount",
            "src": "contracts/DYLIMarketplace.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "offerCount",
            "src": "contracts/DYLIMarketplace.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "usdc",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IERC20)4976",
              "contract": "DYLIMarketplace",
              "src": "contracts/DYLIMarketplace.sol:10"
            },
            {
              "label": "erc1155",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IERC1155)4255",
              "contract": "DYLIMarketplace",
              "src": "contracts/DYLIMarketplace.sol:11"
            },
            {
              "label": "royaltyPercentage",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "DYLIMarketplace",
              "src": "contracts/DYLIMarketplace.sol:13"
            },
            {
              "label": "royaltyRecipient",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "DYLIMarketplace",
              "src": "contracts/DYLIMarketplace.sol:14"
            },
            {
              "label": "fixedFee",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "DYLIMarketplace",
              "src": "contracts/DYLIMarketplace.sol:16"
            },
            {
              "label": "paymentToken",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(IERC20)4976",
              "contract": "DYLIMarketplace",
              "src": "contracts/DYLIMarketplace.sol:18"
            },
            {
              "label": "listingCount",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "DYLIMarketplace",
              "src": "contracts/DYLIMarketplace.sol:26"
            },
            {
              "label": "offerCount",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "DYLIMarketplace",
              "src": "contracts/DYLIMarketplace.sol:27"
            },
            {
              "label": "listings",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(ListingOrBid)7093_storage))",
              "contract": "DYLIMarketplace",
              "src": "contracts/DYLIMarketplace.sol:29"
            },
            {
              "label": "tokenBids",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(ListingOrBid)7093_storage))",
              "contract": "DYLIMarketplace",
              "src": "contracts/DYLIMarketplace.sol:30"
            },
            {
              "label": "tokenRoyalties",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "DYLIMarketplace",
              "src": "contracts/DYLIMarketplace.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC1155)4255": {
              "label": "contract IERC1155",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)4976": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(ListingOrBid)7093_storage))": {
              "label": "mapping(address => mapping(uint256 => struct DYLIMarketplace.ListingOrBid))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ListingOrBid)7093_storage)": {
              "label": "mapping(uint256 => struct DYLIMarketplace.ListingOrBid)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ListingOrBid)7093_storage": {
              "label": "struct DYLIMarketplace.ListingOrBid",
              "members": [
                {
                  "label": "quantity",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "pricePerItem",
                  "type": "t_uint128",
                  "offset": 8,
                  "slot": "0"
                },
                {
                  "label": "expirationTime",
                  "type": "t_uint64",
                  "offset": 24,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint128": {
              "label": "uint128",
              "numberOfBytes": "16"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/DYLI_new.sol:dyli": {
        "src": "contracts/DYLI_new.sol:12",
        "version": {
          "withMetadata": "639d62f48cbd5f6babdf262f0ecfabec8d5320dde29352badcab19871bd22578",
          "withoutMetadata": "639d62f48cbd5f6babdf262f0ecfabec8d5320dde29352badcab19871bd22578",
          "linkedWithoutMetadata": "639d62f48cbd5f6babdf262f0ecfabec8d5320dde29352badcab19871bd22578"
        },
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:BasicRoyalties",
          "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:BasicRoyaltiesBase",
          "@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@limitbreak/creator-token-contracts/contracts/erc1155c/ERC1155C.sol:ERC1155C",
          "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:CreatorTokenBase",
          "@limitbreak/creator-token-contracts/contracts/interfaces/ICreatorToken.sol:ICreatorToken",
          "@limitbreak/creator-token-contracts/contracts/utils/TransferValidation.sol:TransferValidation",
          "@limitbreak/creator-token-contracts/contracts/access/OwnablePermissions.sol:OwnablePermissions",
          "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelin",
          "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelinBase",
          "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,address,address,address,uint96)",
          "name()",
          "symbol()",
          "setURI(string)",
          "setFeeRecipient(address)",
          "setFee(uint256)",
          "setCreateFee(uint256)",
          "setSigner(address)",
          "createDrop(uint256,uint256,bool,bool,bytes,uint256,uint256,uint256,uint256)",
          "mintToken(uint256,bytes,uint256,bool)",
          "batchRedeem(uint256[],uint256,bool,uint256[],bytes)",
          "refundToken(uint256,uint256,bytes,uint256)",
          "disableToken(uint256,bool)",
          "setAdmin(address,bool)",
          "setMarketplace(address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "updateClaimableTokens(uint256)",
          "reserveSafeWithdraw()",
          "fullWithdraw()",
          "setReservedTokens(uint256)",
          "uri(uint256)",
          "supportsInterface(bytes4)",
          "ownerMintToken(uint256,address,uint256)",
          "ownerRedeem(uint256,address,uint256)",
          "ownerRefund(uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "dyli",
            "src": "contracts/DYLI_new.sol:76"
          },
          {
            "kind": "state-variable-assignment",
            "name": "usdc",
            "src": "contracts/DYLI_new.sol:14"
          },
          {
            "kind": "state-variable-assignment",
            "name": "currentTokenId",
            "src": "contracts/DYLI_new.sol:40"
          },
          {
            "kind": "state-variable-assignment",
            "name": "feeRecipient",
            "src": "contracts/DYLI_new.sol:42"
          },
          {
            "kind": "state-variable-assignment",
            "name": "signerAddress",
            "src": "contracts/DYLI_new.sol:43"
          },
          {
            "kind": "state-variable-assignment",
            "name": "fee",
            "src": "contracts/DYLI_new.sol:44"
          },
          {
            "kind": "state-variable-assignment",
            "name": "createFee",
            "src": "contracts/DYLI_new.sol:45"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservedTokens",
            "src": "contracts/DYLI_new.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            },
            {
              "label": "transferValidator",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ICreatorTokenTransferValidator)321",
              "contract": "CreatorTokenBase",
              "src": "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:42"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_defaultRoyaltyInfo",
              "offset": 0,
              "slot": "5",
              "type": "t_struct(RoyaltyInfo)5015_storage",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:30"
            },
            {
              "label": "_tokenRoyaltyInfo",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)5015_storage)",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:31"
            },
            {
              "label": "usdc",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(IERC20)4976",
              "contract": "dyli",
              "src": "contracts/DYLI_new.sol:14"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "dyli",
              "src": "contracts/DYLI_new.sol:28"
            },
            {
              "label": "tokenData",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_struct(TokenData)8161_storage)",
              "contract": "dyli",
              "src": "contracts/DYLI_new.sol:30"
            },
            {
              "label": "tokenDisabled",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "dyli",
              "src": "contracts/DYLI_new.sol:31"
            },
            {
              "label": "totalMinted",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "dyli",
              "src": "contracts/DYLI_new.sol:33"
            },
            {
              "label": "totalRefunded",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "dyli",
              "src": "contracts/DYLI_new.sol:34"
            },
            {
              "label": "totalRedeemed",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "dyli",
              "src": "contracts/DYLI_new.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "dyli",
              "src": "contracts/DYLI_new.sol:37"
            },
            {
              "label": "nonceUsed",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "dyli",
              "src": "contracts/DYLI_new.sol:38"
            },
            {
              "label": "currentTokenId",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "dyli",
              "src": "contracts/DYLI_new.sol:40"
            },
            {
              "label": "feeRecipient",
              "offset": 0,
              "slot": "17",
              "type": "t_address",
              "contract": "dyli",
              "src": "contracts/DYLI_new.sol:42"
            },
            {
              "label": "signerAddress",
              "offset": 0,
              "slot": "18",
              "type": "t_address",
              "contract": "dyli",
              "src": "contracts/DYLI_new.sol:43"
            },
            {
              "label": "fee",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "dyli",
              "src": "contracts/DYLI_new.sol:44"
            },
            {
              "label": "createFee",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "dyli",
              "src": "contracts/DYLI_new.sol:45"
            },
            {
              "label": "marketplace",
              "offset": 0,
              "slot": "21",
              "type": "t_address",
              "contract": "dyli",
              "src": "contracts/DYLI_new.sol:47"
            },
            {
              "label": "BASE_URI",
              "offset": 0,
              "slot": "22",
              "type": "t_string_storage",
              "contract": "dyli",
              "src": "contracts/DYLI_new.sol:48"
            },
            {
              "label": "reservedTokens",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "dyli",
              "src": "contracts/DYLI_new.sol:50"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ICreatorTokenTransferValidator)321": {
              "label": "contract ICreatorTokenTransferValidator",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)4976": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
              "label": "mapping(address => mapping(uint256 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)5015_storage)": {
              "label": "mapping(uint256 => struct ERC2981.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenData)8161_storage)": {
              "label": "mapping(uint256 => struct dyli.TokenData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RoyaltyInfo)5015_storage": {
              "label": "struct ERC2981.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(TokenData)8161_storage": {
              "label": "struct dyli.TokenData",
              "members": [
                {
                  "label": "maxMint",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "startTimestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "minMint",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "tokensReserved",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "creator",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "reserveFreed",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "6"
                },
                {
                  "label": "isOE",
                  "type": "t_bool",
                  "offset": 21,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/dyliUSDC.sol:dyliUSDC": {
        "src": "contracts/dyliUSDC.sol:7",
        "version": {
          "withMetadata": "3acb0bf655ba9a319bafbabd6b06a8d2b38ac3b54a21414458d190f712768e26",
          "withoutMetadata": "3acb0bf655ba9a319bafbabd6b06a8d2b38ac3b54a21414458d190f712768e26",
          "linkedWithoutMetadata": "3acb0bf655ba9a319bafbabd6b06a8d2b38ac3b54a21414458d190f712768e26"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "decimals()",
          "mint(address,uint256)",
          "burn(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "dyliUSDC",
            "src": "contracts/dyliUSDC.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@limitbreak/creator-token-contracts/contracts/access/OwnablePermissions.sol:OwnablePermissions": {
        "src": "@limitbreak/creator-token-contracts/contracts/access/OwnablePermissions.sol:6",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/erc1155c/ERC1155C.sol:ERC1155C": {
        "src": "@limitbreak/creator-token-contracts/contracts/erc1155c/ERC1155C.sol:14",
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:CreatorTokenBase",
          "@limitbreak/creator-token-contracts/contracts/interfaces/ICreatorToken.sol:ICreatorToken",
          "@limitbreak/creator-token-contracts/contracts/utils/TransferValidation.sol:TransferValidation",
          "@limitbreak/creator-token-contracts/contracts/access/OwnablePermissions.sol:OwnablePermissions",
          "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelin",
          "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelinBase",
          "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            },
            {
              "label": "transferValidator",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ICreatorTokenTransferValidator)321",
              "contract": "CreatorTokenBase",
              "src": "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ICreatorTokenTransferValidator)321": {
              "label": "contract ICreatorTokenTransferValidator",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/erc1155c/ERC1155C.sol:ERC1155CInitializable": {
        "src": "@limitbreak/creator-token-contracts/contracts/erc1155c/ERC1155C.sol:64",
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:CreatorTokenBase",
          "@limitbreak/creator-token-contracts/contracts/interfaces/ICreatorToken.sol:ICreatorToken",
          "@limitbreak/creator-token-contracts/contracts/utils/TransferValidation.sol:TransferValidation",
          "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelinInitializable",
          "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelinBase",
          "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@limitbreak/creator-token-contracts/contracts/access/OwnablePermissions.sol:OwnablePermissions",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            },
            {
              "label": "_erc1155Initialized",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "ERC1155OpenZeppelinInitializable",
              "src": "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:20"
            },
            {
              "label": "transferValidator",
              "offset": 1,
              "slot": "3",
              "type": "t_contract(ICreatorTokenTransferValidator)321",
              "contract": "CreatorTokenBase",
              "src": "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ICreatorTokenTransferValidator)321": {
              "label": "contract ICreatorTokenTransferValidator",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/interfaces/ICreatorToken.sol:ICreatorToken": {
        "src": "@limitbreak/creator-token-contracts/contracts/interfaces/ICreatorToken.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getTransferValidator()",
          "getSecurityPolicy()",
          "getWhitelistedOperators()",
          "getPermittedContractReceivers()",
          "isOperatorWhitelisted(address)",
          "isContractReceiverPermitted(address)",
          "isTransferAllowed(address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/interfaces/ICreatorTokenTransferValidator.sol:ICreatorTokenTransferValidator": {
        "src": "@limitbreak/creator-token-contracts/contracts/interfaces/ICreatorTokenTransferValidator.sol:8",
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/interfaces/IEOARegistry.sol:IEOARegistry",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@limitbreak/creator-token-contracts/contracts/interfaces/ITransferValidator.sol:ITransferValidator",
          "@limitbreak/creator-token-contracts/contracts/interfaces/ITransferSecurityRegistry.sol:ITransferSecurityRegistry"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/interfaces/IEOARegistry.sol:IEOARegistry": {
        "src": "@limitbreak/creator-token-contracts/contracts/interfaces/IEOARegistry.sol:6",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "isVerifiedEOA(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/interfaces/ITransferSecurityRegistry.sol:ITransferSecurityRegistry": {
        "src": "@limitbreak/creator-token-contracts/contracts/interfaces/ITransferSecurityRegistry.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createOperatorWhitelist(string)",
          "createPermittedContractReceiverAllowlist(string)",
          "reassignOwnershipOfOperatorWhitelist(uint120,address)",
          "reassignOwnershipOfPermittedContractReceiverAllowlist(uint120,address)",
          "renounceOwnershipOfOperatorWhitelist(uint120)",
          "renounceOwnershipOfPermittedContractReceiverAllowlist(uint120)",
          "setTransferSecurityLevelOfCollection(address,uint8)",
          "setOperatorWhitelistOfCollection(address,uint120)",
          "setPermittedContractReceiverAllowlistOfCollection(address,uint120)",
          "addOperatorToWhitelist(uint120,address)",
          "addPermittedContractReceiverToAllowlist(uint120,address)",
          "removeOperatorFromWhitelist(uint120,address)",
          "removePermittedContractReceiverFromAllowlist(uint120,address)",
          "getCollectionSecurityPolicy(address)",
          "getWhitelistedOperators(uint120)",
          "getPermittedContractReceivers(uint120)",
          "isOperatorWhitelisted(uint120,address)",
          "isContractReceiverPermitted(uint120,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/interfaces/ITransferValidator.sol:ITransferValidator": {
        "src": "@limitbreak/creator-token-contracts/contracts/interfaces/ITransferValidator.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "applyCollectionTransferPolicy(address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:BasicRoyalties": {
        "src": "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:32",
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:BasicRoyaltiesBase",
          "@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BasicRoyalties",
            "src": "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_defaultRoyaltyInfo",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(RoyaltyInfo)3497_storage",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:30"
            },
            {
              "label": "_tokenRoyaltyInfo",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)3497_storage)",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)3497_storage)": {
              "label": "mapping(uint256 => struct ERC2981.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(RoyaltyInfo)3497_storage": {
              "label": "struct ERC2981.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:BasicRoyaltiesBase": {
        "src": "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_defaultRoyaltyInfo",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(RoyaltyInfo)3497_storage",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:30"
            },
            {
              "label": "_tokenRoyaltyInfo",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)3497_storage)",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)3497_storage)": {
              "label": "mapping(uint256 => struct ERC2981.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(RoyaltyInfo)3497_storage": {
              "label": "struct ERC2981.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:BasicRoyaltiesInitializable": {
        "src": "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:43",
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:BasicRoyaltiesBase",
          "@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_defaultRoyaltyInfo",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(RoyaltyInfo)3497_storage",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:30"
            },
            {
              "label": "_tokenRoyaltyInfo",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)3497_storage)",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)3497_storage)": {
              "label": "mapping(uint256 => struct ERC2981.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(RoyaltyInfo)3497_storage": {
              "label": "struct ERC2981.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelin": {
        "src": "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:12",
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelinBase",
          "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155OpenZeppelin",
            "src": "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelinBase": {
        "src": "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:8",
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelinInitializable": {
        "src": "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:16",
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelinBase",
          "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@limitbreak/creator-token-contracts/contracts/access/OwnablePermissions.sol:OwnablePermissions",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "initializeERC1155(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            },
            {
              "label": "_erc1155Initialized",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "ERC1155OpenZeppelinInitializable",
              "src": "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:CreatorTokenBase": {
        "src": "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:33",
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/interfaces/ICreatorToken.sol:ICreatorToken",
          "@limitbreak/creator-token-contracts/contracts/utils/TransferValidation.sol:TransferValidation",
          "@limitbreak/creator-token-contracts/contracts/access/OwnablePermissions.sol:OwnablePermissions",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "setToDefaultSecurityPolicy()",
          "setToCustomValidatorAndSecurityPolicy(address,uint8,uint120,uint120)",
          "setToCustomSecurityPolicy(uint8,uint120,uint120)",
          "setTransferValidator(address)",
          "getTransferValidator()",
          "getSecurityPolicy()",
          "getWhitelistedOperators()",
          "getPermittedContractReceivers()",
          "isOperatorWhitelisted(address)",
          "isContractReceiverPermitted(address)",
          "isTransferAllowed(address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "transferValidator",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ICreatorTokenTransferValidator)321",
              "contract": "CreatorTokenBase",
              "src": "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:42"
            }
          ],
          "types": {
            "t_contract(ICreatorTokenTransferValidator)321": {
              "label": "contract ICreatorTokenTransferValidator",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/utils/TransferValidation.sol:TransferValidation": {
        "src": "@limitbreak/creator-token-contracts/contracts/utils/TransferValidation.sol:13",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/AccessControl.sol:AccessControl": {
        "src": "@openzeppelin/contracts/access/AccessControl.sol:49",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)1500_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)1500_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)1500_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl": {
        "src": "@openzeppelin/contracts/access/IAccessControl.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981": {
        "src": "@openzeppelin/contracts/interfaces/IERC2981.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:20",
        "version": {
          "withMetadata": "98b6a85f8f366a9b763ef82a2d9b6249a191347537fcde7cc4275307dc99bda6",
          "withoutMetadata": "98b6a85f8f366a9b763ef82a2d9b6249a191347537fcde7cc4275307dc99bda6",
          "linkedWithoutMetadata": "98b6a85f8f366a9b763ef82a2d9b6249a191347537fcde7cc4275307dc99bda6"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string)",
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:14",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI": {
        "src": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:14",
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981": {
        "src": "@openzeppelin/contracts/token/common/ERC2981.sol:24",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_defaultRoyaltyInfo",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(RoyaltyInfo)3497_storage",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:30"
            },
            {
              "label": "_tokenRoyaltyInfo",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)3497_storage)",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)3497_storage)": {
              "label": "mapping(uint256 => struct ERC2981.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(RoyaltyInfo)3497_storage": {
              "label": "struct ERC2981.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "88a06e0619fc0272d6778930b606332cf7a479ea47e90a151b436f7ba414357b",
          "withoutMetadata": "88a06e0619fc0272d6778930b606332cf7a479ea47e90a151b436f7ba414357b",
          "linkedWithoutMetadata": "88a06e0619fc0272d6778930b606332cf7a479ea47e90a151b436f7ba414357b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:11",
        "version": {
          "withMetadata": "7c362e654f131db46412f2b294977ec9c15a2450013d8fd3494a0e4efc9273d6",
          "withoutMetadata": "7c362e654f131db46412f2b294977ec9c15a2450013d8fd3494a0e4efc9273d6",
          "linkedWithoutMetadata": "7c362e654f131db46412f2b294977ec9c15a2450013d8fd3494a0e4efc9273d6"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA": {
        "src": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:14",
        "version": {
          "withMetadata": "8aa3ccb02fc44b7f6d5fe57fa1ff2d68670cfc19ae723cb4a6f5e6a371589867",
          "withoutMetadata": "8aa3ccb02fc44b7f6d5fe57fa1ff2d68670cfc19ae723cb4a6f5e6a371589867",
          "linkedWithoutMetadata": "8aa3ccb02fc44b7f6d5fe57fa1ff2d68670cfc19ae723cb4a6f5e6a371589867"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "2b0a51ea28eaa98203f82591b27f917d6aaffcd422cc433c3e8fe727eb017ab5",
          "withoutMetadata": "2b0a51ea28eaa98203f82591b27f917d6aaffcd422cc433c3e8fe727eb017ab5",
          "linkedWithoutMetadata": "2b0a51ea28eaa98203f82591b27f917d6aaffcd422cc433c3e8fe727eb017ab5"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/DYLI_new.sol:dyli": {
        "src": "contracts/DYLI_new.sol:12",
        "version": {
          "withMetadata": "639d62f48cbd5f6babdf262f0ecfabec8d5320dde29352badcab19871bd22578",
          "withoutMetadata": "639d62f48cbd5f6babdf262f0ecfabec8d5320dde29352badcab19871bd22578",
          "linkedWithoutMetadata": "639d62f48cbd5f6babdf262f0ecfabec8d5320dde29352badcab19871bd22578"
        },
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:BasicRoyalties",
          "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:BasicRoyaltiesBase",
          "@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@limitbreak/creator-token-contracts/contracts/erc1155c/ERC1155C.sol:ERC1155C",
          "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:CreatorTokenBase",
          "@limitbreak/creator-token-contracts/contracts/interfaces/ICreatorToken.sol:ICreatorToken",
          "@limitbreak/creator-token-contracts/contracts/utils/TransferValidation.sol:TransferValidation",
          "@limitbreak/creator-token-contracts/contracts/access/OwnablePermissions.sol:OwnablePermissions",
          "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelin",
          "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelinBase",
          "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,address,address,address,uint96)",
          "name()",
          "symbol()",
          "setURI(string)",
          "setFeeRecipient(address)",
          "setFee(uint256)",
          "setCreateFee(uint256)",
          "setSigner(address)",
          "createDrop(uint256,uint256,bool,bool,bytes,uint256,uint256,uint256,uint256)",
          "mintToken(uint256,bytes,uint256,bool)",
          "batchRedeem(uint256[],uint256,bool,uint256[],bytes)",
          "refundToken(uint256,uint256,bytes,uint256)",
          "disableToken(uint256,bool)",
          "setAdmin(address,bool)",
          "setMarketplace(address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "updateClaimableTokens(uint256)",
          "reserveSafeWithdraw()",
          "fullWithdraw()",
          "setReservedTokens(uint256)",
          "uri(uint256)",
          "supportsInterface(bytes4)",
          "ownerMintToken(uint256,address,uint256)",
          "ownerRedeem(uint256,address,uint256)",
          "ownerRefund(uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "dyli",
            "src": "contracts/DYLI_new.sol:76"
          },
          {
            "kind": "state-variable-assignment",
            "name": "usdc",
            "src": "contracts/DYLI_new.sol:14"
          },
          {
            "kind": "state-variable-assignment",
            "name": "currentTokenId",
            "src": "contracts/DYLI_new.sol:40"
          },
          {
            "kind": "state-variable-assignment",
            "name": "feeRecipient",
            "src": "contracts/DYLI_new.sol:42"
          },
          {
            "kind": "state-variable-assignment",
            "name": "signerAddress",
            "src": "contracts/DYLI_new.sol:43"
          },
          {
            "kind": "state-variable-assignment",
            "name": "fee",
            "src": "contracts/DYLI_new.sol:44"
          },
          {
            "kind": "state-variable-assignment",
            "name": "createFee",
            "src": "contracts/DYLI_new.sol:45"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservedTokens",
            "src": "contracts/DYLI_new.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            },
            {
              "label": "transferValidator",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ICreatorTokenTransferValidator)321",
              "contract": "CreatorTokenBase",
              "src": "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:42"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_defaultRoyaltyInfo",
              "offset": 0,
              "slot": "5",
              "type": "t_struct(RoyaltyInfo)3497_storage",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:30"
            },
            {
              "label": "_tokenRoyaltyInfo",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)3497_storage)",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:31"
            },
            {
              "label": "usdc",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(IERC20)3483",
              "contract": "dyli",
              "src": "contracts/DYLI_new.sol:14"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "dyli",
              "src": "contracts/DYLI_new.sol:28"
            },
            {
              "label": "tokenData",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_struct(TokenData)5653_storage)",
              "contract": "dyli",
              "src": "contracts/DYLI_new.sol:30"
            },
            {
              "label": "tokenDisabled",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "dyli",
              "src": "contracts/DYLI_new.sol:31"
            },
            {
              "label": "totalMinted",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "dyli",
              "src": "contracts/DYLI_new.sol:33"
            },
            {
              "label": "totalRefunded",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "dyli",
              "src": "contracts/DYLI_new.sol:34"
            },
            {
              "label": "totalRedeemed",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "dyli",
              "src": "contracts/DYLI_new.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "dyli",
              "src": "contracts/DYLI_new.sol:37"
            },
            {
              "label": "nonceUsed",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "dyli",
              "src": "contracts/DYLI_new.sol:38"
            },
            {
              "label": "currentTokenId",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "dyli",
              "src": "contracts/DYLI_new.sol:40"
            },
            {
              "label": "feeRecipient",
              "offset": 0,
              "slot": "17",
              "type": "t_address",
              "contract": "dyli",
              "src": "contracts/DYLI_new.sol:42"
            },
            {
              "label": "signerAddress",
              "offset": 0,
              "slot": "18",
              "type": "t_address",
              "contract": "dyli",
              "src": "contracts/DYLI_new.sol:43"
            },
            {
              "label": "fee",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "dyli",
              "src": "contracts/DYLI_new.sol:44"
            },
            {
              "label": "createFee",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "dyli",
              "src": "contracts/DYLI_new.sol:45"
            },
            {
              "label": "marketplace",
              "offset": 0,
              "slot": "21",
              "type": "t_address",
              "contract": "dyli",
              "src": "contracts/DYLI_new.sol:47"
            },
            {
              "label": "BASE_URI",
              "offset": 0,
              "slot": "22",
              "type": "t_string_storage",
              "contract": "dyli",
              "src": "contracts/DYLI_new.sol:48"
            },
            {
              "label": "reservedTokens",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "dyli",
              "src": "contracts/DYLI_new.sol:50"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ICreatorTokenTransferValidator)321": {
              "label": "contract ICreatorTokenTransferValidator",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)3483": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
              "label": "mapping(address => mapping(uint256 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)3497_storage)": {
              "label": "mapping(uint256 => struct ERC2981.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenData)5653_storage)": {
              "label": "mapping(uint256 => struct dyli.TokenData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RoyaltyInfo)3497_storage": {
              "label": "struct ERC2981.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(TokenData)5653_storage": {
              "label": "struct dyli.TokenData",
              "members": [
                {
                  "label": "maxMint",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "startTimestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "minMint",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "tokensReserved",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "creator",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "reserveFreed",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "6"
                },
                {
                  "label": "isOE",
                  "type": "t_bool",
                  "offset": 21,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@limitbreak/creator-token-contracts/contracts/access/OwnablePermissions.sol:OwnablePermissions": {
        "src": "@limitbreak/creator-token-contracts/contracts/access/OwnablePermissions.sol:6",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/erc1155c/ERC1155C.sol:ERC1155C": {
        "src": "@limitbreak/creator-token-contracts/contracts/erc1155c/ERC1155C.sol:14",
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:CreatorTokenBase",
          "@limitbreak/creator-token-contracts/contracts/interfaces/ICreatorToken.sol:ICreatorToken",
          "@limitbreak/creator-token-contracts/contracts/utils/TransferValidation.sol:TransferValidation",
          "@limitbreak/creator-token-contracts/contracts/access/OwnablePermissions.sol:OwnablePermissions",
          "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelin",
          "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelinBase",
          "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            },
            {
              "label": "transferValidator",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ICreatorTokenTransferValidator)321",
              "contract": "CreatorTokenBase",
              "src": "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ICreatorTokenTransferValidator)321": {
              "label": "contract ICreatorTokenTransferValidator",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/erc1155c/ERC1155C.sol:ERC1155CInitializable": {
        "src": "@limitbreak/creator-token-contracts/contracts/erc1155c/ERC1155C.sol:64",
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:CreatorTokenBase",
          "@limitbreak/creator-token-contracts/contracts/interfaces/ICreatorToken.sol:ICreatorToken",
          "@limitbreak/creator-token-contracts/contracts/utils/TransferValidation.sol:TransferValidation",
          "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelinInitializable",
          "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelinBase",
          "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@limitbreak/creator-token-contracts/contracts/access/OwnablePermissions.sol:OwnablePermissions",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            },
            {
              "label": "_erc1155Initialized",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "ERC1155OpenZeppelinInitializable",
              "src": "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:20"
            },
            {
              "label": "transferValidator",
              "offset": 1,
              "slot": "3",
              "type": "t_contract(ICreatorTokenTransferValidator)321",
              "contract": "CreatorTokenBase",
              "src": "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ICreatorTokenTransferValidator)321": {
              "label": "contract ICreatorTokenTransferValidator",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/interfaces/ICreatorToken.sol:ICreatorToken": {
        "src": "@limitbreak/creator-token-contracts/contracts/interfaces/ICreatorToken.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getTransferValidator()",
          "getSecurityPolicy()",
          "getWhitelistedOperators()",
          "getPermittedContractReceivers()",
          "isOperatorWhitelisted(address)",
          "isContractReceiverPermitted(address)",
          "isTransferAllowed(address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/interfaces/ICreatorTokenTransferValidator.sol:ICreatorTokenTransferValidator": {
        "src": "@limitbreak/creator-token-contracts/contracts/interfaces/ICreatorTokenTransferValidator.sol:8",
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/interfaces/IEOARegistry.sol:IEOARegistry",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@limitbreak/creator-token-contracts/contracts/interfaces/ITransferValidator.sol:ITransferValidator",
          "@limitbreak/creator-token-contracts/contracts/interfaces/ITransferSecurityRegistry.sol:ITransferSecurityRegistry"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/interfaces/IEOARegistry.sol:IEOARegistry": {
        "src": "@limitbreak/creator-token-contracts/contracts/interfaces/IEOARegistry.sol:6",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "isVerifiedEOA(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/interfaces/ITransferSecurityRegistry.sol:ITransferSecurityRegistry": {
        "src": "@limitbreak/creator-token-contracts/contracts/interfaces/ITransferSecurityRegistry.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createOperatorWhitelist(string)",
          "createPermittedContractReceiverAllowlist(string)",
          "reassignOwnershipOfOperatorWhitelist(uint120,address)",
          "reassignOwnershipOfPermittedContractReceiverAllowlist(uint120,address)",
          "renounceOwnershipOfOperatorWhitelist(uint120)",
          "renounceOwnershipOfPermittedContractReceiverAllowlist(uint120)",
          "setTransferSecurityLevelOfCollection(address,uint8)",
          "setOperatorWhitelistOfCollection(address,uint120)",
          "setPermittedContractReceiverAllowlistOfCollection(address,uint120)",
          "addOperatorToWhitelist(uint120,address)",
          "addPermittedContractReceiverToAllowlist(uint120,address)",
          "removeOperatorFromWhitelist(uint120,address)",
          "removePermittedContractReceiverFromAllowlist(uint120,address)",
          "getCollectionSecurityPolicy(address)",
          "getWhitelistedOperators(uint120)",
          "getPermittedContractReceivers(uint120)",
          "isOperatorWhitelisted(uint120,address)",
          "isContractReceiverPermitted(uint120,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/interfaces/ITransferValidator.sol:ITransferValidator": {
        "src": "@limitbreak/creator-token-contracts/contracts/interfaces/ITransferValidator.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "applyCollectionTransferPolicy(address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:BasicRoyalties": {
        "src": "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:32",
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:BasicRoyaltiesBase",
          "@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BasicRoyalties",
            "src": "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_defaultRoyaltyInfo",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(RoyaltyInfo)3497_storage",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:30"
            },
            {
              "label": "_tokenRoyaltyInfo",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)3497_storage)",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)3497_storage)": {
              "label": "mapping(uint256 => struct ERC2981.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(RoyaltyInfo)3497_storage": {
              "label": "struct ERC2981.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:BasicRoyaltiesBase": {
        "src": "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_defaultRoyaltyInfo",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(RoyaltyInfo)3497_storage",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:30"
            },
            {
              "label": "_tokenRoyaltyInfo",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)3497_storage)",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)3497_storage)": {
              "label": "mapping(uint256 => struct ERC2981.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(RoyaltyInfo)3497_storage": {
              "label": "struct ERC2981.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:BasicRoyaltiesInitializable": {
        "src": "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:43",
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:BasicRoyaltiesBase",
          "@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_defaultRoyaltyInfo",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(RoyaltyInfo)3497_storage",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:30"
            },
            {
              "label": "_tokenRoyaltyInfo",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)3497_storage)",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)3497_storage)": {
              "label": "mapping(uint256 => struct ERC2981.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(RoyaltyInfo)3497_storage": {
              "label": "struct ERC2981.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelin": {
        "src": "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:12",
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelinBase",
          "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155OpenZeppelin",
            "src": "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelinBase": {
        "src": "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:8",
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelinInitializable": {
        "src": "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:16",
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelinBase",
          "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@limitbreak/creator-token-contracts/contracts/access/OwnablePermissions.sol:OwnablePermissions",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "initializeERC1155(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            },
            {
              "label": "_erc1155Initialized",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "ERC1155OpenZeppelinInitializable",
              "src": "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:CreatorTokenBase": {
        "src": "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:33",
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/interfaces/ICreatorToken.sol:ICreatorToken",
          "@limitbreak/creator-token-contracts/contracts/utils/TransferValidation.sol:TransferValidation",
          "@limitbreak/creator-token-contracts/contracts/access/OwnablePermissions.sol:OwnablePermissions",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "setToDefaultSecurityPolicy()",
          "setToCustomValidatorAndSecurityPolicy(address,uint8,uint120,uint120)",
          "setToCustomSecurityPolicy(uint8,uint120,uint120)",
          "setTransferValidator(address)",
          "getTransferValidator()",
          "getSecurityPolicy()",
          "getWhitelistedOperators()",
          "getPermittedContractReceivers()",
          "isOperatorWhitelisted(address)",
          "isContractReceiverPermitted(address)",
          "isTransferAllowed(address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "transferValidator",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ICreatorTokenTransferValidator)321",
              "contract": "CreatorTokenBase",
              "src": "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:42"
            }
          ],
          "types": {
            "t_contract(ICreatorTokenTransferValidator)321": {
              "label": "contract ICreatorTokenTransferValidator",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/utils/TransferValidation.sol:TransferValidation": {
        "src": "@limitbreak/creator-token-contracts/contracts/utils/TransferValidation.sol:13",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/AccessControl.sol:AccessControl": {
        "src": "@openzeppelin/contracts/access/AccessControl.sol:49",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)1500_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)1500_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)1500_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl": {
        "src": "@openzeppelin/contracts/access/IAccessControl.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981": {
        "src": "@openzeppelin/contracts/interfaces/IERC2981.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:20",
        "version": {
          "withMetadata": "98b6a85f8f366a9b763ef82a2d9b6249a191347537fcde7cc4275307dc99bda6",
          "withoutMetadata": "98b6a85f8f366a9b763ef82a2d9b6249a191347537fcde7cc4275307dc99bda6",
          "linkedWithoutMetadata": "98b6a85f8f366a9b763ef82a2d9b6249a191347537fcde7cc4275307dc99bda6"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string)",
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:14",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI": {
        "src": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:14",
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981": {
        "src": "@openzeppelin/contracts/token/common/ERC2981.sol:24",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_defaultRoyaltyInfo",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(RoyaltyInfo)3497_storage",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:30"
            },
            {
              "label": "_tokenRoyaltyInfo",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)3497_storage)",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)3497_storage)": {
              "label": "mapping(uint256 => struct ERC2981.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(RoyaltyInfo)3497_storage": {
              "label": "struct ERC2981.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "88a06e0619fc0272d6778930b606332cf7a479ea47e90a151b436f7ba414357b",
          "withoutMetadata": "88a06e0619fc0272d6778930b606332cf7a479ea47e90a151b436f7ba414357b",
          "linkedWithoutMetadata": "88a06e0619fc0272d6778930b606332cf7a479ea47e90a151b436f7ba414357b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:11",
        "version": {
          "withMetadata": "7c362e654f131db46412f2b294977ec9c15a2450013d8fd3494a0e4efc9273d6",
          "withoutMetadata": "7c362e654f131db46412f2b294977ec9c15a2450013d8fd3494a0e4efc9273d6",
          "linkedWithoutMetadata": "7c362e654f131db46412f2b294977ec9c15a2450013d8fd3494a0e4efc9273d6"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA": {
        "src": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:14",
        "version": {
          "withMetadata": "8aa3ccb02fc44b7f6d5fe57fa1ff2d68670cfc19ae723cb4a6f5e6a371589867",
          "withoutMetadata": "8aa3ccb02fc44b7f6d5fe57fa1ff2d68670cfc19ae723cb4a6f5e6a371589867",
          "linkedWithoutMetadata": "8aa3ccb02fc44b7f6d5fe57fa1ff2d68670cfc19ae723cb4a6f5e6a371589867"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "2b0a51ea28eaa98203f82591b27f917d6aaffcd422cc433c3e8fe727eb017ab5",
          "withoutMetadata": "2b0a51ea28eaa98203f82591b27f917d6aaffcd422cc433c3e8fe727eb017ab5",
          "linkedWithoutMetadata": "2b0a51ea28eaa98203f82591b27f917d6aaffcd422cc433c3e8fe727eb017ab5"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/DYLI_new.sol:dyli": {
        "src": "contracts/DYLI_new.sol:12",
        "version": {
          "withMetadata": "b0ca0cf422f0eb84819caf70bacf52fe8efee6a9eaf13ce92431a96ab4da75cb",
          "withoutMetadata": "b0ca0cf422f0eb84819caf70bacf52fe8efee6a9eaf13ce92431a96ab4da75cb",
          "linkedWithoutMetadata": "b0ca0cf422f0eb84819caf70bacf52fe8efee6a9eaf13ce92431a96ab4da75cb"
        },
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:BasicRoyalties",
          "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:BasicRoyaltiesBase",
          "@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@limitbreak/creator-token-contracts/contracts/erc1155c/ERC1155C.sol:ERC1155C",
          "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:CreatorTokenBase",
          "@limitbreak/creator-token-contracts/contracts/interfaces/ICreatorToken.sol:ICreatorToken",
          "@limitbreak/creator-token-contracts/contracts/utils/TransferValidation.sol:TransferValidation",
          "@limitbreak/creator-token-contracts/contracts/access/OwnablePermissions.sol:OwnablePermissions",
          "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelin",
          "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelinBase",
          "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,address,address,address,uint96)",
          "name()",
          "symbol()",
          "setURI(string)",
          "setFeeRecipient(address)",
          "setFee(uint256)",
          "setCreateFee(uint256)",
          "setSigner(address)",
          "createDrop(uint256,uint256,bool,bool,bytes,uint256,uint256,uint256,uint256)",
          "mintToken(uint256,bytes,uint256,bool)",
          "batchRedeem(uint256[],uint256,bool,uint256[],bytes)",
          "refundToken(uint256,uint256,bytes,uint256)",
          "disableToken(uint256,bool)",
          "setAdmin(address,bool)",
          "setMarketplace(address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "updateClaimableTokens(uint256)",
          "reserveSafeWithdraw()",
          "fullWithdraw()",
          "setReservedTokens(uint256)",
          "uri(uint256)",
          "supportsInterface(bytes4)",
          "ownerMintToken(uint256,address,uint256)",
          "ownerRedeem(uint256,address,uint256)",
          "ownerRefund(uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "dyli",
            "src": "contracts/DYLI_new.sol:76"
          },
          {
            "kind": "state-variable-assignment",
            "name": "usdc",
            "src": "contracts/DYLI_new.sol:14"
          },
          {
            "kind": "state-variable-assignment",
            "name": "currentTokenId",
            "src": "contracts/DYLI_new.sol:40"
          },
          {
            "kind": "state-variable-assignment",
            "name": "feeRecipient",
            "src": "contracts/DYLI_new.sol:42"
          },
          {
            "kind": "state-variable-assignment",
            "name": "signerAddress",
            "src": "contracts/DYLI_new.sol:43"
          },
          {
            "kind": "state-variable-assignment",
            "name": "fee",
            "src": "contracts/DYLI_new.sol:44"
          },
          {
            "kind": "state-variable-assignment",
            "name": "createFee",
            "src": "contracts/DYLI_new.sol:45"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservedTokens",
            "src": "contracts/DYLI_new.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            },
            {
              "label": "transferValidator",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ICreatorTokenTransferValidator)321",
              "contract": "CreatorTokenBase",
              "src": "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:42"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_defaultRoyaltyInfo",
              "offset": 0,
              "slot": "5",
              "type": "t_struct(RoyaltyInfo)3497_storage",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:30"
            },
            {
              "label": "_tokenRoyaltyInfo",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)3497_storage)",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:31"
            },
            {
              "label": "usdc",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(IERC20)3483",
              "contract": "dyli",
              "src": "contracts/DYLI_new.sol:14"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "dyli",
              "src": "contracts/DYLI_new.sol:28"
            },
            {
              "label": "tokenData",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_struct(TokenData)5653_storage)",
              "contract": "dyli",
              "src": "contracts/DYLI_new.sol:30"
            },
            {
              "label": "tokenDisabled",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "dyli",
              "src": "contracts/DYLI_new.sol:31"
            },
            {
              "label": "totalMinted",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "dyli",
              "src": "contracts/DYLI_new.sol:33"
            },
            {
              "label": "totalRefunded",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "dyli",
              "src": "contracts/DYLI_new.sol:34"
            },
            {
              "label": "totalRedeemed",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "dyli",
              "src": "contracts/DYLI_new.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "dyli",
              "src": "contracts/DYLI_new.sol:37"
            },
            {
              "label": "nonceUsed",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "dyli",
              "src": "contracts/DYLI_new.sol:38"
            },
            {
              "label": "currentTokenId",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "dyli",
              "src": "contracts/DYLI_new.sol:40"
            },
            {
              "label": "feeRecipient",
              "offset": 0,
              "slot": "17",
              "type": "t_address",
              "contract": "dyli",
              "src": "contracts/DYLI_new.sol:42"
            },
            {
              "label": "signerAddress",
              "offset": 0,
              "slot": "18",
              "type": "t_address",
              "contract": "dyli",
              "src": "contracts/DYLI_new.sol:43"
            },
            {
              "label": "fee",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "dyli",
              "src": "contracts/DYLI_new.sol:44"
            },
            {
              "label": "createFee",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "dyli",
              "src": "contracts/DYLI_new.sol:45"
            },
            {
              "label": "marketplace",
              "offset": 0,
              "slot": "21",
              "type": "t_address",
              "contract": "dyli",
              "src": "contracts/DYLI_new.sol:47"
            },
            {
              "label": "BASE_URI",
              "offset": 0,
              "slot": "22",
              "type": "t_string_storage",
              "contract": "dyli",
              "src": "contracts/DYLI_new.sol:48"
            },
            {
              "label": "reservedTokens",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "dyli",
              "src": "contracts/DYLI_new.sol:50"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ICreatorTokenTransferValidator)321": {
              "label": "contract ICreatorTokenTransferValidator",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)3483": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
              "label": "mapping(address => mapping(uint256 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)3497_storage)": {
              "label": "mapping(uint256 => struct ERC2981.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenData)5653_storage)": {
              "label": "mapping(uint256 => struct dyli.TokenData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RoyaltyInfo)3497_storage": {
              "label": "struct ERC2981.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(TokenData)5653_storage": {
              "label": "struct dyli.TokenData",
              "members": [
                {
                  "label": "maxMint",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "startTimestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "minMint",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "tokensReserved",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "creator",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "reserveFreed",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "6"
                },
                {
                  "label": "isOE",
                  "type": "t_bool",
                  "offset": 21,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:14",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/DYLIMarketplace.sol:DYLIMarketplace": {
        "src": "contracts/DYLIMarketplace.sol:9",
        "version": {
          "withMetadata": "f2be5eaca5bd5c6d26ccf2a2ad0ba8db786bc00d0b3576a970b58aae2b190f73",
          "withoutMetadata": "f2be5eaca5bd5c6d26ccf2a2ad0ba8db786bc00d0b3576a970b58aae2b190f73",
          "linkedWithoutMetadata": "f2be5eaca5bd5c6d26ccf2a2ad0ba8db786bc00d0b3576a970b58aae2b190f73"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "setUSDCContract(address)",
          "setERC1155Contract(address)",
          "createListing(uint256,uint128,uint64,uint64)",
          "editListing(uint256,uint128,uint64)",
          "cancelListing(uint256)",
          "buyListing(uint256,address,uint64,uint128)",
          "createBid(uint256,uint64,uint64,uint128)",
          "editBid(uint256,uint64,uint64)",
          "cancelBid(uint256)",
          "acceptBid(uint256,address)",
          "setRoyaltyRecipient(address)",
          "setRoyaltyPercentage(uint256)",
          "setTokenRoyalty(uint256,uint256)",
          "setFixedFee(uint256)",
          "withdrawUSDC(uint256)",
          "withdrawETH(uint256)",
          "getBid(uint256)",
          "getListing(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "usdc",
            "src": "contracts/DYLIMarketplace.sol:10"
          },
          {
            "kind": "state-variable-assignment",
            "name": "erc1155",
            "src": "contracts/DYLIMarketplace.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "royaltyPercentage",
            "src": "contracts/DYLIMarketplace.sol:13"
          },
          {
            "kind": "state-variable-assignment",
            "name": "royaltyRecipient",
            "src": "contracts/DYLIMarketplace.sol:14"
          },
          {
            "kind": "state-variable-assignment",
            "name": "fixedFee",
            "src": "contracts/DYLIMarketplace.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "listingCount",
            "src": "contracts/DYLIMarketplace.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "offerCount",
            "src": "contracts/DYLIMarketplace.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "usdc",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IERC20)366",
              "contract": "DYLIMarketplace",
              "src": "contracts/DYLIMarketplace.sol:10"
            },
            {
              "label": "erc1155",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IERC1155)288",
              "contract": "DYLIMarketplace",
              "src": "contracts/DYLIMarketplace.sol:11"
            },
            {
              "label": "royaltyPercentage",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "DYLIMarketplace",
              "src": "contracts/DYLIMarketplace.sol:13"
            },
            {
              "label": "royaltyRecipient",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "DYLIMarketplace",
              "src": "contracts/DYLIMarketplace.sol:14"
            },
            {
              "label": "fixedFee",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "DYLIMarketplace",
              "src": "contracts/DYLIMarketplace.sol:16"
            },
            {
              "label": "paymentToken",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(IERC20)366",
              "contract": "DYLIMarketplace",
              "src": "contracts/DYLIMarketplace.sol:18"
            },
            {
              "label": "listingCount",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "DYLIMarketplace",
              "src": "contracts/DYLIMarketplace.sol:26"
            },
            {
              "label": "offerCount",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "DYLIMarketplace",
              "src": "contracts/DYLIMarketplace.sol:27"
            },
            {
              "label": "listings",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(ListingOrBid)445_storage))",
              "contract": "DYLIMarketplace",
              "src": "contracts/DYLIMarketplace.sol:29"
            },
            {
              "label": "tokenBids",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(ListingOrBid)445_storage))",
              "contract": "DYLIMarketplace",
              "src": "contracts/DYLIMarketplace.sol:30"
            },
            {
              "label": "tokenRoyalties",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "DYLIMarketplace",
              "src": "contracts/DYLIMarketplace.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC1155)288": {
              "label": "contract IERC1155",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)366": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(ListingOrBid)445_storage))": {
              "label": "mapping(address => mapping(uint256 => struct DYLIMarketplace.ListingOrBid))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ListingOrBid)445_storage)": {
              "label": "mapping(uint256 => struct DYLIMarketplace.ListingOrBid)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ListingOrBid)445_storage": {
              "label": "struct DYLIMarketplace.ListingOrBid",
              "members": [
                {
                  "label": "quantity",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "pricePerItem",
                  "type": "t_uint128",
                  "offset": 8,
                  "slot": "0"
                },
                {
                  "label": "expirationTime",
                  "type": "t_uint64",
                  "offset": 24,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint128": {
              "label": "uint128",
              "numberOfBytes": "16"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:14",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/DYLIMarketplace.sol:DYLIMarketplace": {
        "src": "contracts/DYLIMarketplace.sol:9",
        "version": {
          "withMetadata": "8ea1739141eceaf63a6d00cb9843dc94a3cf32ad48b7d12c3b1eded058523706",
          "withoutMetadata": "8ea1739141eceaf63a6d00cb9843dc94a3cf32ad48b7d12c3b1eded058523706",
          "linkedWithoutMetadata": "8ea1739141eceaf63a6d00cb9843dc94a3cf32ad48b7d12c3b1eded058523706"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "setUSDCContract(address)",
          "setERC1155Contract(address)",
          "createListing(uint256,uint128,uint64,uint64)",
          "editListing(uint256,uint128,uint64)",
          "cancelListing(uint256)",
          "buyListing(uint256,address,uint64,uint128)",
          "createBid(uint256,uint64,uint64,uint128)",
          "editBid(uint256,uint64,uint64)",
          "cancelBid(uint256)",
          "acceptBid(uint256,address)",
          "setRoyaltyRecipient(address)",
          "setRoyaltyPercentage(uint256)",
          "setTokenRoyalty(uint256,uint256)",
          "setFixedFee(uint256)",
          "withdrawUSDC(uint256)",
          "withdrawETH(uint256)",
          "getBid(uint256)",
          "getListing(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "usdc",
            "src": "contracts/DYLIMarketplace.sol:10"
          },
          {
            "kind": "state-variable-assignment",
            "name": "erc1155",
            "src": "contracts/DYLIMarketplace.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "royaltyPercentage",
            "src": "contracts/DYLIMarketplace.sol:13"
          },
          {
            "kind": "state-variable-assignment",
            "name": "royaltyRecipient",
            "src": "contracts/DYLIMarketplace.sol:14"
          },
          {
            "kind": "state-variable-assignment",
            "name": "fixedFee",
            "src": "contracts/DYLIMarketplace.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "listingCount",
            "src": "contracts/DYLIMarketplace.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "offerCount",
            "src": "contracts/DYLIMarketplace.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "usdc",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IERC20)366",
              "contract": "DYLIMarketplace",
              "src": "contracts/DYLIMarketplace.sol:10"
            },
            {
              "label": "erc1155",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IERC1155)288",
              "contract": "DYLIMarketplace",
              "src": "contracts/DYLIMarketplace.sol:11"
            },
            {
              "label": "royaltyPercentage",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "DYLIMarketplace",
              "src": "contracts/DYLIMarketplace.sol:13"
            },
            {
              "label": "royaltyRecipient",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "DYLIMarketplace",
              "src": "contracts/DYLIMarketplace.sol:14"
            },
            {
              "label": "fixedFee",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "DYLIMarketplace",
              "src": "contracts/DYLIMarketplace.sol:16"
            },
            {
              "label": "paymentToken",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(IERC20)366",
              "contract": "DYLIMarketplace",
              "src": "contracts/DYLIMarketplace.sol:18"
            },
            {
              "label": "listingCount",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "DYLIMarketplace",
              "src": "contracts/DYLIMarketplace.sol:26"
            },
            {
              "label": "offerCount",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "DYLIMarketplace",
              "src": "contracts/DYLIMarketplace.sol:27"
            },
            {
              "label": "listings",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(ListingOrBid)445_storage))",
              "contract": "DYLIMarketplace",
              "src": "contracts/DYLIMarketplace.sol:29"
            },
            {
              "label": "tokenBids",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(ListingOrBid)445_storage))",
              "contract": "DYLIMarketplace",
              "src": "contracts/DYLIMarketplace.sol:30"
            },
            {
              "label": "tokenRoyalties",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "DYLIMarketplace",
              "src": "contracts/DYLIMarketplace.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC1155)288": {
              "label": "contract IERC1155",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)366": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(ListingOrBid)445_storage))": {
              "label": "mapping(address => mapping(uint256 => struct DYLIMarketplace.ListingOrBid))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ListingOrBid)445_storage)": {
              "label": "mapping(uint256 => struct DYLIMarketplace.ListingOrBid)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ListingOrBid)445_storage": {
              "label": "struct DYLIMarketplace.ListingOrBid",
              "members": [
                {
                  "label": "quantity",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "pricePerItem",
                  "type": "t_uint128",
                  "offset": 8,
                  "slot": "0"
                },
                {
                  "label": "expirationTime",
                  "type": "t_uint64",
                  "offset": 24,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint128": {
              "label": "uint128",
              "numberOfBytes": "16"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:14",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/DYLIMarketplace.sol:DYLIMarketplace": {
        "src": "contracts/DYLIMarketplace.sol:9",
        "version": {
          "withMetadata": "74f123184f55739647c458d5339978f4064b2ca56d9d77ba20d9ffe829be5d25",
          "withoutMetadata": "74f123184f55739647c458d5339978f4064b2ca56d9d77ba20d9ffe829be5d25",
          "linkedWithoutMetadata": "74f123184f55739647c458d5339978f4064b2ca56d9d77ba20d9ffe829be5d25"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "setUSDCContract(address)",
          "setERC1155Contract(address)",
          "createListing(uint256,uint128,uint64,uint64)",
          "editListing(uint256,uint128,uint64)",
          "cancelListing(uint256)",
          "buyListing(uint256,address,uint64,uint128)",
          "createBid(uint256,uint64,uint64,uint128)",
          "editBid(uint256,uint64,uint64)",
          "cancelBid(uint256)",
          "acceptBid(uint256,address)",
          "setRoyaltyRecipient(address)",
          "setRoyaltyPercentage(uint256)",
          "setTokenRoyalty(uint256,uint256)",
          "setFixedFee(uint256)",
          "withdrawUSDC(uint256)",
          "withdrawETH(uint256)",
          "getBid(uint256)",
          "getListing(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "usdc",
            "src": "contracts/DYLIMarketplace.sol:10"
          },
          {
            "kind": "state-variable-assignment",
            "name": "erc1155",
            "src": "contracts/DYLIMarketplace.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "royaltyPercentage",
            "src": "contracts/DYLIMarketplace.sol:13"
          },
          {
            "kind": "state-variable-assignment",
            "name": "royaltyRecipient",
            "src": "contracts/DYLIMarketplace.sol:14"
          },
          {
            "kind": "state-variable-assignment",
            "name": "fixedFee",
            "src": "contracts/DYLIMarketplace.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "listingCount",
            "src": "contracts/DYLIMarketplace.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "offerCount",
            "src": "contracts/DYLIMarketplace.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "usdc",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IERC20)366",
              "contract": "DYLIMarketplace",
              "src": "contracts/DYLIMarketplace.sol:10"
            },
            {
              "label": "erc1155",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IERC1155)288",
              "contract": "DYLIMarketplace",
              "src": "contracts/DYLIMarketplace.sol:11"
            },
            {
              "label": "royaltyPercentage",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "DYLIMarketplace",
              "src": "contracts/DYLIMarketplace.sol:13"
            },
            {
              "label": "royaltyRecipient",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "DYLIMarketplace",
              "src": "contracts/DYLIMarketplace.sol:14"
            },
            {
              "label": "fixedFee",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "DYLIMarketplace",
              "src": "contracts/DYLIMarketplace.sol:16"
            },
            {
              "label": "paymentToken",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(IERC20)366",
              "contract": "DYLIMarketplace",
              "src": "contracts/DYLIMarketplace.sol:18"
            },
            {
              "label": "listingCount",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "DYLIMarketplace",
              "src": "contracts/DYLIMarketplace.sol:26"
            },
            {
              "label": "offerCount",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "DYLIMarketplace",
              "src": "contracts/DYLIMarketplace.sol:27"
            },
            {
              "label": "listings",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(ListingOrBid)445_storage))",
              "contract": "DYLIMarketplace",
              "src": "contracts/DYLIMarketplace.sol:29"
            },
            {
              "label": "tokenBids",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(ListingOrBid)445_storage))",
              "contract": "DYLIMarketplace",
              "src": "contracts/DYLIMarketplace.sol:30"
            },
            {
              "label": "tokenRoyalties",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "DYLIMarketplace",
              "src": "contracts/DYLIMarketplace.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC1155)288": {
              "label": "contract IERC1155",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)366": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(ListingOrBid)445_storage))": {
              "label": "mapping(address => mapping(uint256 => struct DYLIMarketplace.ListingOrBid))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ListingOrBid)445_storage)": {
              "label": "mapping(uint256 => struct DYLIMarketplace.ListingOrBid)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ListingOrBid)445_storage": {
              "label": "struct DYLIMarketplace.ListingOrBid",
              "members": [
                {
                  "label": "quantity",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "pricePerItem",
                  "type": "t_uint128",
                  "offset": 8,
                  "slot": "0"
                },
                {
                  "label": "expirationTime",
                  "type": "t_uint64",
                  "offset": 24,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint128": {
              "label": "uint128",
              "numberOfBytes": "16"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@limitbreak/creator-token-contracts/contracts/access/OwnablePermissions.sol:OwnablePermissions": {
        "src": "@limitbreak/creator-token-contracts/contracts/access/OwnablePermissions.sol:6",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/erc1155c/ERC1155C.sol:ERC1155C": {
        "src": "@limitbreak/creator-token-contracts/contracts/erc1155c/ERC1155C.sol:14",
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:CreatorTokenBase",
          "@limitbreak/creator-token-contracts/contracts/interfaces/ICreatorToken.sol:ICreatorToken",
          "@limitbreak/creator-token-contracts/contracts/utils/TransferValidation.sol:TransferValidation",
          "@limitbreak/creator-token-contracts/contracts/access/OwnablePermissions.sol:OwnablePermissions",
          "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelin",
          "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelinBase",
          "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            },
            {
              "label": "transferValidator",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ICreatorTokenTransferValidator)321",
              "contract": "CreatorTokenBase",
              "src": "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ICreatorTokenTransferValidator)321": {
              "label": "contract ICreatorTokenTransferValidator",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/erc1155c/ERC1155C.sol:ERC1155CInitializable": {
        "src": "@limitbreak/creator-token-contracts/contracts/erc1155c/ERC1155C.sol:64",
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:CreatorTokenBase",
          "@limitbreak/creator-token-contracts/contracts/interfaces/ICreatorToken.sol:ICreatorToken",
          "@limitbreak/creator-token-contracts/contracts/utils/TransferValidation.sol:TransferValidation",
          "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelinInitializable",
          "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelinBase",
          "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@limitbreak/creator-token-contracts/contracts/access/OwnablePermissions.sol:OwnablePermissions",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            },
            {
              "label": "_erc1155Initialized",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "ERC1155OpenZeppelinInitializable",
              "src": "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:20"
            },
            {
              "label": "transferValidator",
              "offset": 1,
              "slot": "3",
              "type": "t_contract(ICreatorTokenTransferValidator)321",
              "contract": "CreatorTokenBase",
              "src": "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ICreatorTokenTransferValidator)321": {
              "label": "contract ICreatorTokenTransferValidator",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/interfaces/ICreatorToken.sol:ICreatorToken": {
        "src": "@limitbreak/creator-token-contracts/contracts/interfaces/ICreatorToken.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getTransferValidator()",
          "getSecurityPolicy()",
          "getWhitelistedOperators()",
          "getPermittedContractReceivers()",
          "isOperatorWhitelisted(address)",
          "isContractReceiverPermitted(address)",
          "isTransferAllowed(address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/interfaces/ICreatorTokenTransferValidator.sol:ICreatorTokenTransferValidator": {
        "src": "@limitbreak/creator-token-contracts/contracts/interfaces/ICreatorTokenTransferValidator.sol:8",
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/interfaces/IEOARegistry.sol:IEOARegistry",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@limitbreak/creator-token-contracts/contracts/interfaces/ITransferValidator.sol:ITransferValidator",
          "@limitbreak/creator-token-contracts/contracts/interfaces/ITransferSecurityRegistry.sol:ITransferSecurityRegistry"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/interfaces/IEOARegistry.sol:IEOARegistry": {
        "src": "@limitbreak/creator-token-contracts/contracts/interfaces/IEOARegistry.sol:6",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "isVerifiedEOA(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/interfaces/ITransferSecurityRegistry.sol:ITransferSecurityRegistry": {
        "src": "@limitbreak/creator-token-contracts/contracts/interfaces/ITransferSecurityRegistry.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createOperatorWhitelist(string)",
          "createPermittedContractReceiverAllowlist(string)",
          "reassignOwnershipOfOperatorWhitelist(uint120,address)",
          "reassignOwnershipOfPermittedContractReceiverAllowlist(uint120,address)",
          "renounceOwnershipOfOperatorWhitelist(uint120)",
          "renounceOwnershipOfPermittedContractReceiverAllowlist(uint120)",
          "setTransferSecurityLevelOfCollection(address,uint8)",
          "setOperatorWhitelistOfCollection(address,uint120)",
          "setPermittedContractReceiverAllowlistOfCollection(address,uint120)",
          "addOperatorToWhitelist(uint120,address)",
          "addPermittedContractReceiverToAllowlist(uint120,address)",
          "removeOperatorFromWhitelist(uint120,address)",
          "removePermittedContractReceiverFromAllowlist(uint120,address)",
          "getCollectionSecurityPolicy(address)",
          "getWhitelistedOperators(uint120)",
          "getPermittedContractReceivers(uint120)",
          "isOperatorWhitelisted(uint120,address)",
          "isContractReceiverPermitted(uint120,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/interfaces/ITransferValidator.sol:ITransferValidator": {
        "src": "@limitbreak/creator-token-contracts/contracts/interfaces/ITransferValidator.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "applyCollectionTransferPolicy(address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:BasicRoyalties": {
        "src": "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:32",
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:BasicRoyaltiesBase",
          "@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BasicRoyalties",
            "src": "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_defaultRoyaltyInfo",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(RoyaltyInfo)5015_storage",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:30"
            },
            {
              "label": "_tokenRoyaltyInfo",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)5015_storage)",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)5015_storage)": {
              "label": "mapping(uint256 => struct ERC2981.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(RoyaltyInfo)5015_storage": {
              "label": "struct ERC2981.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:BasicRoyaltiesBase": {
        "src": "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_defaultRoyaltyInfo",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(RoyaltyInfo)5015_storage",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:30"
            },
            {
              "label": "_tokenRoyaltyInfo",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)5015_storage)",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)5015_storage)": {
              "label": "mapping(uint256 => struct ERC2981.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(RoyaltyInfo)5015_storage": {
              "label": "struct ERC2981.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:BasicRoyaltiesInitializable": {
        "src": "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:43",
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:BasicRoyaltiesBase",
          "@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_defaultRoyaltyInfo",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(RoyaltyInfo)5015_storage",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:30"
            },
            {
              "label": "_tokenRoyaltyInfo",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)5015_storage)",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)5015_storage)": {
              "label": "mapping(uint256 => struct ERC2981.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(RoyaltyInfo)5015_storage": {
              "label": "struct ERC2981.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelin": {
        "src": "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:12",
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelinBase",
          "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155OpenZeppelin",
            "src": "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelinBase": {
        "src": "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:8",
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelinInitializable": {
        "src": "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:16",
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelinBase",
          "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@limitbreak/creator-token-contracts/contracts/access/OwnablePermissions.sol:OwnablePermissions",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "initializeERC1155(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            },
            {
              "label": "_erc1155Initialized",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "ERC1155OpenZeppelinInitializable",
              "src": "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:CreatorTokenBase": {
        "src": "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:33",
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/interfaces/ICreatorToken.sol:ICreatorToken",
          "@limitbreak/creator-token-contracts/contracts/utils/TransferValidation.sol:TransferValidation",
          "@limitbreak/creator-token-contracts/contracts/access/OwnablePermissions.sol:OwnablePermissions",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "setToDefaultSecurityPolicy()",
          "setToCustomValidatorAndSecurityPolicy(address,uint8,uint120,uint120)",
          "setToCustomSecurityPolicy(uint8,uint120,uint120)",
          "setTransferValidator(address)",
          "getTransferValidator()",
          "getSecurityPolicy()",
          "getWhitelistedOperators()",
          "getPermittedContractReceivers()",
          "isOperatorWhitelisted(address)",
          "isContractReceiverPermitted(address)",
          "isTransferAllowed(address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "transferValidator",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ICreatorTokenTransferValidator)321",
              "contract": "CreatorTokenBase",
              "src": "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:42"
            }
          ],
          "types": {
            "t_contract(ICreatorTokenTransferValidator)321": {
              "label": "contract ICreatorTokenTransferValidator",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@limitbreak/creator-token-contracts/contracts/utils/TransferValidation.sol:TransferValidation": {
        "src": "@limitbreak/creator-token-contracts/contracts/utils/TransferValidation.sol:13",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/AccessControl.sol:AccessControl": {
        "src": "@openzeppelin/contracts/access/AccessControl.sol:49",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)1500_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)1500_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)1500_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl": {
        "src": "@openzeppelin/contracts/access/IAccessControl.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981": {
        "src": "@openzeppelin/contracts/interfaces/IERC2981.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:15",
        "version": {
          "withMetadata": "8b75ad3c9c27832f34858bab035a4b4132e80e18429db1c7459065123c5318ae",
          "withoutMetadata": "8b75ad3c9c27832f34858bab035a4b4132e80e18429db1c7459065123c5318ae",
          "linkedWithoutMetadata": "8b75ad3c9c27832f34858bab035a4b4132e80e18429db1c7459065123c5318ae"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:22"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:19",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/proxy/Proxy.sol:Proxy": {
        "src": "@openzeppelin/contracts/proxy/Proxy.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:BeaconProxy": {
        "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:18",
        "version": {
          "withMetadata": "654b6293ebc01560ec815be8b48129be8e7546fffb1e0df511fd56982ba8331c",
          "withoutMetadata": "654b6293ebc01560ec815be8b48129be8e7546fffb1e0df511fd56982ba8331c",
          "linkedWithoutMetadata": "654b6293ebc01560ec815be8b48129be8e7546fffb1e0df511fd56982ba8331c"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:30"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:UpgradeableBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:16",
        "version": {
          "withMetadata": "b0587c909fda3b948bc100488bd4f9f4f14788cff166936b71d2090758e999ed",
          "withoutMetadata": "b0587c909fda3b948bc100488bd4f9f4f14788cff166936b71d2090758e999ed",
          "linkedWithoutMetadata": "b0587c909fda3b948bc100488bd4f9f4f14788cff166936b71d2090758e999ed"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "implementation()",
          "upgradeTo(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_implementation",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UpgradeableBeacon",
              "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol:ProxyAdmin": {
        "src": "@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol:13",
        "version": {
          "withMetadata": "abfad86ce6e5fc77073b07986731da62d412c5c211acb5d4d45ae8485c55c8a1",
          "withoutMetadata": "abfad86ce6e5fc77073b07986731da62d412c5c211acb5d4d45ae8485c55c8a1",
          "linkedWithoutMetadata": "abfad86ce6e5fc77073b07986731da62d412c5c211acb5d4d45ae8485c55c8a1"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "getProxyImplementation(address)",
          "getProxyAdmin(address)",
          "changeProxyAdmin(address,address)",
          "upgrade(address,address)",
          "upgradeAndCall(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:TransparentUpgradeableProxy": {
        "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:29",
        "version": {
          "withMetadata": "fed30d15e4dea83a738eca08cbdd6c4e37ff8826dbb9835f02d1354a647fb612",
          "withoutMetadata": "fed30d15e4dea83a738eca08cbdd6c4e37ff8826dbb9835f02d1354a647fb612",
          "linkedWithoutMetadata": "fed30d15e4dea83a738eca08cbdd6c4e37ff8826dbb9835f02d1354a647fb612"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy",
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)",
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:34"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:20",
        "version": {
          "withMetadata": "98b6a85f8f366a9b763ef82a2d9b6249a191347537fcde7cc4275307dc99bda6",
          "withoutMetadata": "98b6a85f8f366a9b763ef82a2d9b6249a191347537fcde7cc4275307dc99bda6",
          "linkedWithoutMetadata": "98b6a85f8f366a9b763ef82a2d9b6249a191347537fcde7cc4275307dc99bda6"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string)",
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:14",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI": {
        "src": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:14",
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "1f0032315e50a02988ce107335f22b6a04fd6d95be570e1da8852d443d4c142a",
          "withoutMetadata": "1f0032315e50a02988ce107335f22b6a04fd6d95be570e1da8852d443d4c142a",
          "linkedWithoutMetadata": "1f0032315e50a02988ce107335f22b6a04fd6d95be570e1da8852d443d4c142a"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981": {
        "src": "@openzeppelin/contracts/token/common/ERC2981.sol:24",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_defaultRoyaltyInfo",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(RoyaltyInfo)5015_storage",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:30"
            },
            {
              "label": "_tokenRoyaltyInfo",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)5015_storage)",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)5015_storage)": {
              "label": "mapping(uint256 => struct ERC2981.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(RoyaltyInfo)5015_storage": {
              "label": "struct ERC2981.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "88a06e0619fc0272d6778930b606332cf7a479ea47e90a151b436f7ba414357b",
          "withoutMetadata": "88a06e0619fc0272d6778930b606332cf7a479ea47e90a151b436f7ba414357b",
          "linkedWithoutMetadata": "88a06e0619fc0272d6778930b606332cf7a479ea47e90a151b436f7ba414357b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:32",
        "version": {
          "withMetadata": "3a60c60d871bdb5572878e78528ab39c3813661f870b13657f1cbc61465f72c1",
          "withoutMetadata": "3a60c60d871bdb5572878e78528ab39c3813661f870b13657f1cbc61465f72c1",
          "linkedWithoutMetadata": "3a60c60d871bdb5572878e78528ab39c3813661f870b13657f1cbc61465f72c1"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:11",
        "version": {
          "withMetadata": "7c362e654f131db46412f2b294977ec9c15a2450013d8fd3494a0e4efc9273d6",
          "withoutMetadata": "7c362e654f131db46412f2b294977ec9c15a2450013d8fd3494a0e4efc9273d6",
          "linkedWithoutMetadata": "7c362e654f131db46412f2b294977ec9c15a2450013d8fd3494a0e4efc9273d6"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA": {
        "src": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:14",
        "version": {
          "withMetadata": "8aa3ccb02fc44b7f6d5fe57fa1ff2d68670cfc19ae723cb4a6f5e6a371589867",
          "withoutMetadata": "8aa3ccb02fc44b7f6d5fe57fa1ff2d68670cfc19ae723cb4a6f5e6a371589867",
          "linkedWithoutMetadata": "8aa3ccb02fc44b7f6d5fe57fa1ff2d68670cfc19ae723cb4a6f5e6a371589867"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "2b0a51ea28eaa98203f82591b27f917d6aaffcd422cc433c3e8fe727eb017ab5",
          "withoutMetadata": "2b0a51ea28eaa98203f82591b27f917d6aaffcd422cc433c3e8fe727eb017ab5",
          "linkedWithoutMetadata": "2b0a51ea28eaa98203f82591b27f917d6aaffcd422cc433c3e8fe727eb017ab5"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/DYLIMarketplace.sol:DYLIMarketplace": {
        "src": "contracts/DYLIMarketplace.sol:9",
        "version": {
          "withMetadata": "d89ad5ec1868f753e9fdde363b08a54df4d886654dd6825e3a5dc48b3c3deef6",
          "withoutMetadata": "d89ad5ec1868f753e9fdde363b08a54df4d886654dd6825e3a5dc48b3c3deef6",
          "linkedWithoutMetadata": "d89ad5ec1868f753e9fdde363b08a54df4d886654dd6825e3a5dc48b3c3deef6"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "setUSDCContract(address)",
          "setERC1155Contract(address)",
          "createListing(uint256,uint128,uint64,uint64)",
          "editListing(uint256,uint128,uint64)",
          "cancelListing(uint256)",
          "buyListing(uint256,address,uint64,uint128)",
          "createBid(uint256,uint64,uint64,uint128)",
          "editBid(uint256,uint64,uint64)",
          "cancelBid(uint256)",
          "acceptBid(uint256,address)",
          "setRoyaltyRecipient(address)",
          "setRoyaltyPercentage(uint256)",
          "setTokenRoyalty(uint256,uint256)",
          "setFixedFee(uint256)",
          "withdrawUSDC(uint256)",
          "withdrawETH(uint256)",
          "getBid(uint256)",
          "getListing(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "usdc",
            "src": "contracts/DYLIMarketplace.sol:10"
          },
          {
            "kind": "state-variable-assignment",
            "name": "erc1155",
            "src": "contracts/DYLIMarketplace.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "royaltyPercentage",
            "src": "contracts/DYLIMarketplace.sol:13"
          },
          {
            "kind": "state-variable-assignment",
            "name": "royaltyRecipient",
            "src": "contracts/DYLIMarketplace.sol:14"
          },
          {
            "kind": "state-variable-assignment",
            "name": "fixedFee",
            "src": "contracts/DYLIMarketplace.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "listingCount",
            "src": "contracts/DYLIMarketplace.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "offerCount",
            "src": "contracts/DYLIMarketplace.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "usdc",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IERC20)4976",
              "contract": "DYLIMarketplace",
              "src": "contracts/DYLIMarketplace.sol:10"
            },
            {
              "label": "erc1155",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IERC1155)4255",
              "contract": "DYLIMarketplace",
              "src": "contracts/DYLIMarketplace.sol:11"
            },
            {
              "label": "royaltyPercentage",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "DYLIMarketplace",
              "src": "contracts/DYLIMarketplace.sol:13"
            },
            {
              "label": "royaltyRecipient",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "DYLIMarketplace",
              "src": "contracts/DYLIMarketplace.sol:14"
            },
            {
              "label": "fixedFee",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "DYLIMarketplace",
              "src": "contracts/DYLIMarketplace.sol:16"
            },
            {
              "label": "paymentToken",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(IERC20)4976",
              "contract": "DYLIMarketplace",
              "src": "contracts/DYLIMarketplace.sol:18"
            },
            {
              "label": "listingCount",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "DYLIMarketplace",
              "src": "contracts/DYLIMarketplace.sol:26"
            },
            {
              "label": "offerCount",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "DYLIMarketplace",
              "src": "contracts/DYLIMarketplace.sol:27"
            },
            {
              "label": "listings",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(ListingOrBid)7093_storage))",
              "contract": "DYLIMarketplace",
              "src": "contracts/DYLIMarketplace.sol:29"
            },
            {
              "label": "tokenBids",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(ListingOrBid)7093_storage))",
              "contract": "DYLIMarketplace",
              "src": "contracts/DYLIMarketplace.sol:30"
            },
            {
              "label": "tokenRoyalties",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "DYLIMarketplace",
              "src": "contracts/DYLIMarketplace.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC1155)4255": {
              "label": "contract IERC1155",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)4976": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(ListingOrBid)7093_storage))": {
              "label": "mapping(address => mapping(uint256 => struct DYLIMarketplace.ListingOrBid))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ListingOrBid)7093_storage)": {
              "label": "mapping(uint256 => struct DYLIMarketplace.ListingOrBid)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ListingOrBid)7093_storage": {
              "label": "struct DYLIMarketplace.ListingOrBid",
              "members": [
                {
                  "label": "quantity",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "pricePerItem",
                  "type": "t_uint128",
                  "offset": 8,
                  "slot": "0"
                },
                {
                  "label": "expirationTime",
                  "type": "t_uint64",
                  "offset": 24,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint128": {
              "label": "uint128",
              "numberOfBytes": "16"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/DYLI_new.sol:DYLI_new": {
        "src": "contracts/DYLI_new.sol:12",
        "version": {
          "withMetadata": "17c12a996f2e122ce660ebfd2654edaa943b11624fbd1f0d51a8d61713ac5744",
          "withoutMetadata": "17c12a996f2e122ce660ebfd2654edaa943b11624fbd1f0d51a8d61713ac5744",
          "linkedWithoutMetadata": "17c12a996f2e122ce660ebfd2654edaa943b11624fbd1f0d51a8d61713ac5744"
        },
        "inherit": [
          "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:BasicRoyalties",
          "@limitbreak/creator-token-contracts/contracts/programmable-royalties/BasicRoyalties.sol:BasicRoyaltiesBase",
          "@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@limitbreak/creator-token-contracts/contracts/erc1155c/ERC1155C.sol:ERC1155C",
          "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:CreatorTokenBase",
          "@limitbreak/creator-token-contracts/contracts/interfaces/ICreatorToken.sol:ICreatorToken",
          "@limitbreak/creator-token-contracts/contracts/utils/TransferValidation.sol:TransferValidation",
          "@limitbreak/creator-token-contracts/contracts/access/OwnablePermissions.sol:OwnablePermissions",
          "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelin",
          "@limitbreak/creator-token-contracts/contracts/token/erc1155/ERC1155OpenZeppelin.sol:ERC1155OpenZeppelinBase",
          "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,address,address,address,uint96)",
          "name()",
          "symbol()",
          "setURI(string)",
          "setFeeRecipient(address)",
          "setFee(uint256)",
          "setCreateFee(uint256)",
          "setSigner(address)",
          "createDrop(uint256,uint256,bool,bool,bytes,uint256,uint256,uint256,uint256)",
          "mintToken(uint256,bytes,uint256,bool)",
          "refundToken(uint256,uint256)",
          "batchRedeem(uint256[],uint256,bytes)",
          "reserveSafeWithdraw()",
          "fullWithdraw()",
          "disableToken(uint256,bool)",
          "setAdmin(address,bool)",
          "setMarketplace(address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "uri(uint256)",
          "supportsInterface(bytes4)",
          "ownerCreateDrop(uint256,uint256,bool,uint256,uint256,uint256)",
          "ownerMintToken(uint256,address,uint256,bool)",
          "ownerRefund(uint256,address,uint256)",
          "ownerRedeem(uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DYLI_new",
            "src": "contracts/DYLI_new.sol:70"
          },
          {
            "kind": "state-variable-assignment",
            "name": "usdc",
            "src": "contracts/DYLI_new.sol:14"
          },
          {
            "kind": "state-variable-assignment",
            "name": "currentTokenId",
            "src": "contracts/DYLI_new.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "feeRecipient",
            "src": "contracts/DYLI_new.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "signerAddress",
            "src": "contracts/DYLI_new.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "fee",
            "src": "contracts/DYLI_new.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "createFee",
            "src": "contracts/DYLI_new.sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservedTokens",
            "src": "contracts/DYLI_new.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            },
            {
              "label": "transferValidator",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ICreatorTokenTransferValidator)321",
              "contract": "CreatorTokenBase",
              "src": "@limitbreak/creator-token-contracts/contracts/utils/CreatorTokenBase.sol:42"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_defaultRoyaltyInfo",
              "offset": 0,
              "slot": "5",
              "type": "t_struct(RoyaltyInfo)5015_storage",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:30"
            },
            {
              "label": "_tokenRoyaltyInfo",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)5015_storage)",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:31"
            },
            {
              "label": "usdc",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(IERC20)4976",
              "contract": "DYLI_new",
              "src": "contracts/DYLI_new.sol:14"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "DYLI_new",
              "src": "contracts/DYLI_new.sol:21"
            },
            {
              "label": "tokenData",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_struct(TokenData)8131_storage)",
              "contract": "DYLI_new",
              "src": "contracts/DYLI_new.sol:22"
            },
            {
              "label": "tokenDisabled",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "DYLI_new",
              "src": "contracts/DYLI_new.sol:23"
            },
            {
              "label": "totalMinted",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "DYLI_new",
              "src": "contracts/DYLI_new.sol:24"
            },
            {
              "label": "totalRefunded",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "DYLI_new",
              "src": "contracts/DYLI_new.sol:25"
            },
            {
              "label": "totalRedeemed",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "DYLI_new",
              "src": "contracts/DYLI_new.sol:26"
            },
            {
              "label": "stripeMinted",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "DYLI_new",
              "src": "contracts/DYLI_new.sol:27"
            },
            {
              "label": "nonStripeMinted",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "DYLI_new",
              "src": "contracts/DYLI_new.sol:28"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "DYLI_new",
              "src": "contracts/DYLI_new.sol:29"
            },
            {
              "label": "nonceUsed",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "DYLI_new",
              "src": "contracts/DYLI_new.sol:30"
            },
            {
              "label": "currentTokenId",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "DYLI_new",
              "src": "contracts/DYLI_new.sol:32"
            },
            {
              "label": "feeRecipient",
              "offset": 0,
              "slot": "19",
              "type": "t_address",
              "contract": "DYLI_new",
              "src": "contracts/DYLI_new.sol:33"
            },
            {
              "label": "signerAddress",
              "offset": 0,
              "slot": "20",
              "type": "t_address",
              "contract": "DYLI_new",
              "src": "contracts/DYLI_new.sol:34"
            },
            {
              "label": "fee",
              "offset": 0,
              "slot": "21",
              "type": "t_uint256",
              "contract": "DYLI_new",
              "src": "contracts/DYLI_new.sol:35"
            },
            {
              "label": "createFee",
              "offset": 0,
              "slot": "22",
              "type": "t_uint256",
              "contract": "DYLI_new",
              "src": "contracts/DYLI_new.sol:36"
            },
            {
              "label": "marketplace",
              "offset": 0,
              "slot": "23",
              "type": "t_address",
              "contract": "DYLI_new",
              "src": "contracts/DYLI_new.sol:37"
            },
            {
              "label": "BASE_URI",
              "offset": 0,
              "slot": "24",
              "type": "t_string_storage",
              "contract": "DYLI_new",
              "src": "contracts/DYLI_new.sol:38"
            },
            {
              "label": "reservedTokens",
              "offset": 0,
              "slot": "25",
              "type": "t_uint256",
              "contract": "DYLI_new",
              "src": "contracts/DYLI_new.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ICreatorTokenTransferValidator)321": {
              "label": "contract ICreatorTokenTransferValidator",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)4976": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
              "label": "mapping(address => mapping(uint256 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)5015_storage)": {
              "label": "mapping(uint256 => struct ERC2981.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenData)8131_storage)": {
              "label": "mapping(uint256 => struct DYLI_new.TokenData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RoyaltyInfo)5015_storage": {
              "label": "struct ERC2981.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(TokenData)8131_storage": {
              "label": "struct DYLI_new.TokenData",
              "members": [
                {
                  "label": "maxMint",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "startTimestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "minMint",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "tokensReserved",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "creator",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "reserveFreed",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "6"
                },
                {
                  "label": "isOE",
                  "type": "t_bool",
                  "offset": 21,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/dyliUSDC.sol:dyliUSDC": {
        "src": "contracts/dyliUSDC.sol:7",
        "version": {
          "withMetadata": "3acb0bf655ba9a319bafbabd6b06a8d2b38ac3b54a21414458d190f712768e26",
          "withoutMetadata": "3acb0bf655ba9a319bafbabd6b06a8d2b38ac3b54a21414458d190f712768e26",
          "linkedWithoutMetadata": "3acb0bf655ba9a319bafbabd6b06a8d2b38ac3b54a21414458d190f712768e26"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "decimals()",
          "mint(address,uint256)",
          "burn(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "dyliUSDC",
            "src": "contracts/dyliUSDC.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      }
    }
  ]
}